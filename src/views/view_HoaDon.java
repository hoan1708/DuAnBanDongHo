
package views;

import java.awt.Color;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import models.HoaDon;
import models.HoaDonChiTiet;
import models.PhieuBaoHanh;
import models.TemplateBaoHanh;
import services.imp.HoaDonChiTietService;
import services.imp.HoaDonService;
import services.imp.TemplatePBHService;
import models.model_DN.ChiTietDongHo;
import repositorys.imp.HoaDonRepository;
import repositorys.imp.Imp_DN.ChiTietDongHoRepository;
import services.imp.PhieuBaoHanhService;

/**
 *
 * @author Admin
 */
public class view_HoaDon extends javax.swing.JPanel {

    private List<HoaDon> listHD = new ArrayList<>();
    private DefaultTableModel dtm1, dtm2;
    private HoaDonService hdsv = new HoaDonService();
    private List<HoaDonChiTiet> listHDCT = new ArrayList<>();
    private HoaDonChiTietService hdctsv = new HoaDonChiTietService();
    private List<HoaDonChiTiet> listHDCT2 = new ArrayList<>();
    private List<ChiTietDongHo> listCTDH = new ArrayList<>();
    private HoaDonChiTiet ctdh = new HoaDonChiTiet();

    /**
     * Creates new form view_HoaDon
     */
    public view_HoaDon() {
        initComponents();
        listHD = hdsv.GetAll();
        listHDCT = hdctsv.GetAll();
        listCTDH = new ChiTietDongHoRepository().getAll();
        dtm1 = new DefaultTableModel();
        dtm2 = new DefaultTableModel();
        tbl_hoadon.setModel(dtm1);
        tbl_HoaDonCT.setModel(dtm2);
        String[] header1 = {"ID Hoá Đơn", "Tên Khách Hàng", "Tên Nhân Viên", "Ngày Mua", "Ngày Thanh Toán", "Tổng Tiền", "Trạng Thái"};
        String[] header2 = {"ID Hoá Đơn Chi Tiết", "ID Hoá Đơn", "Tên Đồng Hồ", "Số Lượng", "Đơn Giá", "Thành Tiền"};
        dtm1.setColumnIdentifiers(header1);
        dtm2.setColumnIdentifiers(header2);
        setTT(listHD);
        showData1(listHD);

        int index2 = tbl_HoaDonCT.getSelectedRow();
        if (index2 < 0) {
            btn_AddPBH.setEnabled(false);
        }
        

    }

    private void setTT(List<HoaDon> listHD) {
        for (HoaDon hoaDon : listHD) {
            hoaDon.setTongTien(tinhTongTien(listHDCT2, hoaDon.getIdHD()));

        }
    }

    private Double tinhTongTien(List<HoaDonChiTiet> listHDCT1, String id) {
        listHDCT1 = hdctsv.GetByIdHD(id);
        Double tongTien = 0.0;
        for (HoaDonChiTiet hoaDonChiTiet : listHDCT1) {
            tongTien += hoaDonChiTiet.getThanhTien();
        }
        return tongTien;
    }

    private void showData1(List<HoaDon> listHD) {
        dtm1.setRowCount(0);
        for (HoaDon pbh : listHD) {
            dtm1.addRow(pbh.toDataRow());
        }
    }

    private void showData3(List<HoaDonChiTiet> listHD) {
        dtm2.setRowCount(0);
        for (HoaDonChiTiet hoaDonChiTiet : listHD) {
            dtm2.addRow(hoaDonChiTiet.toDataRow());
        }
    }

    private void showData2(List<HoaDonChiTiet> listHDCT2, String id) {
        List<ChiTietDongHo> list = new ArrayList<>();
        list = new ChiTietDongHoRepository().getAll();
        listHDCT2 = hdctsv.GetByIdHD(id);
        dtm2.setRowCount(0);
        for (HoaDonChiTiet hoaDonChiTiet : listHDCT2) {
            dtm2.addRow(hoaDonChiTiet.toDataRow());
        }
    }

    private void fillData1(int index) throws ParseException {
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        Date date1 = sdf.parse(listHD.get(index).getNgayThanhToan());
        txt_ngayTT.setDate(date1);
        if (listHD.get(index).getIdTrangThai() == 3) {
            cbo_trangthai.setSelectedIndex(1);
        } else {
            cbo_trangthai.setSelectedIndex(0);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelGradiente1 = new swing.PanelGradiente();
        panelBorder1 = new swing.PanelBorder();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_hoadon = new javax.swing.JTable();
        panelBorder3 = new swing.PanelBorder();
        btn_search = new javax.swing.JLabel();
        txt_timKiem = new swing.SearchText();
        cbo_trangthai = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txt_ngayTT = new com.toedter.calendar.JDateChooser();
        btn_UpdateHD = new javax.swing.JButton();
        btn_AddPBH = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbl_HoaDonCT = new javax.swing.JTable();
        panelBorder2 = new swing.PanelBorder();
        txtTongTien = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();

        panelGradiente1.setColorPrimario(new java.awt.Color(102, 204, 255));
        panelGradiente1.setColorSecundario(new java.awt.Color(51, 204, 255));

        panelBorder1.setBackground(new java.awt.Color(102, 204, 255));

        tbl_hoadon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "TÊN NHÂN VIÊN", "TÊN KHÁCH HÀNG", "TỔNG TIỀN", "NGÀY TẠO", "NGÀY TT", "TRẠNG THÁI"
            }
        ));
        tbl_hoadon.setGridColor(new java.awt.Color(255, 255, 255));
        tbl_hoadon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_hoadonMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_hoadon);

        panelBorder1.add(jScrollPane1);
        jScrollPane1.setBounds(0, 190, 1120, 180);

        panelBorder3.setBackground(new java.awt.Color(255, 255, 255));

        btn_search.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/search_24px.png"))); // NOI18N
        btn_search.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_searchMouseClicked(evt);
            }
        });
        panelBorder3.add(btn_search);
        btn_search.setBounds(750, 0, 40, 40);

        txt_timKiem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt_timKiemMouseClicked(evt);
            }
        });
        txt_timKiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_timKiemKeyReleased(evt);
            }
        });
        panelBorder3.add(txt_timKiem);
        txt_timKiem.setBounds(10, 0, 730, 40);

        panelBorder1.add(panelBorder3);
        panelBorder3.setBounds(100, 30, 810, 40);

        cbo_trangthai.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Chưa thanh toán", "Đã thanh toán" }));
        cbo_trangthai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbo_trangthaiActionPerformed(evt);
            }
        });
        panelBorder1.add(cbo_trangthai);
        cbo_trangthai.setBounds(100, 120, 220, 40);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("NGÀY THANH TOÁN");
        panelBorder1.add(jLabel4);
        jLabel4.setBounds(380, 100, 140, 20);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Trạng thái");
        panelBorder1.add(jLabel5);
        jLabel5.setBounds(100, 100, 220, 20);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 102));
        jLabel7.setText("Hóa Đơn");
        panelBorder1.add(jLabel7);
        jLabel7.setBounds(0, 160, 220, 30);

        txt_ngayTT.setDateFormatString("dd/MM/yyyy");
        txt_ngayTT.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                txt_ngayTTAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        panelBorder1.add(txt_ngayTT);
        txt_ngayTT.setBounds(380, 120, 210, 40);

        btn_UpdateHD.setText("UPDATE");
        btn_UpdateHD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_UpdateHDActionPerformed(evt);
            }
        });
        panelBorder1.add(btn_UpdateHD);
        btn_UpdateHD.setBounds(660, 120, 160, 40);

        btn_AddPBH.setText("Tạo Phiếu Bảo Hành");
        btn_AddPBH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_AddPBHActionPerformed(evt);
            }
        });
        panelBorder1.add(btn_AddPBH);
        btn_AddPBH.setBounds(860, 130, 140, 25);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 102));
        jLabel1.setText("Hóa đơn chi tiết");
        panelBorder1.add(jLabel1);
        jLabel1.setBounds(0, 370, 220, 30);

        tbl_HoaDonCT.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã Hóa Đơn", "MÃ ĐỒNG HỒ", "TÊN ĐỒNG HỒ", "SỐ LƯỢNG", "ĐƠN GIÁ", "Thành Tiền"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_HoaDonCT.setGridColor(new java.awt.Color(255, 255, 255));
        tbl_HoaDonCT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_HoaDonCTMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbl_HoaDonCT);

        panelBorder1.add(jScrollPane2);
        jScrollPane2.setBounds(0, 400, 1120, 250);

        panelGradiente1.add(panelBorder1);
        panelBorder1.setBounds(30, 20, 1130, 690);

        panelBorder2.setBackground(new java.awt.Color(102, 204, 255));
        panelGradiente1.add(panelBorder2);
        panelBorder2.setBounds(20, 660, 1150, 250);
        panelGradiente1.add(txtTongTien);
        txtTongTien.setBounds(1020, 400, 130, 22);

        jLabel2.setText("Tổng Tiền:");
        panelGradiente1.add(jLabel2);
        jLabel2.setBounds(960, 400, 60, 20);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelGradiente1, javax.swing.GroupLayout.PREFERRED_SIZE, 1189, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelGradiente1, javax.swing.GroupLayout.PREFERRED_SIZE, 947, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btn_searchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_searchMouseClicked
        List<HoaDon> listS = new ArrayList<>();
        listS = new HoaDonRepository().GetOneByTenKH(txt_timKiem.getText());
        setTT(listS);
        showData1(listS);
        
    }//GEN-LAST:event_btn_searchMouseClicked

    private void txt_timKiemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt_timKiemMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_timKiemMouseClicked

    private void txt_timKiemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_timKiemKeyReleased
        // TODO add your handling code here:

    }//GEN-LAST:event_txt_timKiemKeyReleased

    private void cbo_trangthaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbo_trangthaiActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_cbo_trangthaiActionPerformed

    private void txt_ngayTTAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_txt_ngayTTAncestorAdded

    }//GEN-LAST:event_txt_ngayTTAncestorAdded

    private void btn_UpdateHDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_UpdateHDActionPerformed
        // TODO add your handling code here:
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        String date1 = sdf.format(txt_ngayTT.getDate());
        int index = tbl_hoadon.getSelectedRow();
        int tt = 0;
        if (cbo_trangthai.getSelectedIndex() == 0) {
            tt = 0;
        } else {
            tt = 1;
        }
        HoaDon hd = new HoaDon(date1, tt);
        if (new HoaDonService().Update(hd, listHD.get(index).getIdHD())) {
            JOptionPane.showMessageDialog(this, "Sửa Thành Công");
        } else {
            JOptionPane.showMessageDialog(this, "Sửa Không Thành Công");
        }
        showData1(listHD);

    }//GEN-LAST:event_btn_UpdateHDActionPerformed

    private void btn_AddPBHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_AddPBHActionPerformed
        // TODO add your handling code here:
        int index1 = tbl_hoadon.getSelectedRow();
        List<HoaDon> listHD1 = new ArrayList<>();
        listHD1 = hdsv.GetAll();
        listHDCT2 = hdctsv.GetByIdHD(listHD1.get(index1).getIdHD());
        int index2 = tbl_HoaDonCT.getSelectedRow();
        ctdh = listHDCT2.get(index2);
        boolean flag = false;

        List<TemplateBaoHanh> ltpb = new TemplatePBHService().GetAll();
        if (index2 < 0) {
            JOptionPane.showMessageDialog(panelBorder1, "Chọn dữ liệu bảng Hoá Đơn Chi Tiết");
        } else if (index1 < 0) {
            JOptionPane.showMessageDialog(panelBorder1, "Chọn dữ liệu bảng Hoá Đơn");
        } else {
            for (TemplateBaoHanh templateBaoHanh : ltpb) {
                if (ctdh.getIdCTDH().getIdDH().getTen().equalsIgnoreCase(templateBaoHanh.getTenSP())) {
                    PhieuBaoHanh pbh = new PhieuBaoHanh(listHD1.get(index1).getNgayThanhToan(), templateBaoHanh.getThoiHan(), 1, ctdh);
                    flag = new PhieuBaoHanhService().Add(pbh);
                    break;
                }
            }
            if (flag == true) {
                JOptionPane.showMessageDialog(panelBorder1, "Thêm Thành Công");
            } else {
                JOptionPane.showMessageDialog(panelBorder1, "Thêm Thất Bại");
            }
        }



    }//GEN-LAST:event_btn_AddPBHActionPerformed

    private void tbl_HoaDonCTMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_HoaDonCTMouseClicked
        // TODO add your handling code here:
        int index1 = tbl_hoadon.getSelectedRow();
        listHDCT2 = hdctsv.GetByIdHD(listHD.get(index1).getIdHD());
        int index2 = tbl_HoaDonCT.getSelectedRow();
        if (index2 < 0) {
            JOptionPane.showMessageDialog(panelBorder1, "Vui lòng chọn hoá đơn chi tiết");
        } else {
            btn_AddPBH.setEnabled(true);
        }
        ctdh = listHDCT2.get(index2);
    }//GEN-LAST:event_tbl_HoaDonCTMouseClicked

    private void tbl_hoadonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_hoadonMouseClicked

        int index = tbl_hoadon.getSelectedRow();
        try {
            fillData1(index);
        } catch (ParseException ex) {
            ex.printStackTrace();
        }
        showData2(listHDCT2, listHD.get(index).getIdHD());
        txtTongTien.setText(String.valueOf(tinhTongTien(listHDCT2, listHD.get(index).getIdHD())));
    }//GEN-LAST:event_tbl_hoadonMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_AddPBH;
    private javax.swing.JButton btn_UpdateHD;
    private javax.swing.JLabel btn_search;
    private javax.swing.JComboBox<String> cbo_trangthai;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private swing.PanelBorder panelBorder1;
    private swing.PanelBorder panelBorder2;
    private swing.PanelBorder panelBorder3;
    private swing.PanelGradiente panelGradiente1;
    private javax.swing.JTable tbl_HoaDonCT;
    private javax.swing.JTable tbl_hoadon;
    private javax.swing.JTextField txtTongTien;
    private com.toedter.calendar.JDateChooser txt_ngayTT;
    private swing.SearchText txt_timKiem;
    // End of variables declaration//GEN-END:variables
}
