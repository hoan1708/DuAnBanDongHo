package views;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import models.model_H.ChiTietDongHo;
import models.model_H.HoaDon;
import models.model_H.HoaDonChiTiet;
import models.model_H.KhachHang;
import models.model_H.MauQuaiDeo;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellType;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import repositorys.imp.Imp_H.ChiTietDongHoRepository;
import repositorys.IRepo_H.IChiTietDongHoRepository;
import repositorys.IRepo_H.IHoaDonRepository;
import services.ISV_H.IHoaDonService;
import services.imp.ImpSV_H.ChiTietDongHoService;
import services.imp.ImpSV_H.DongHoService;
import services.imp.ImpSV_H.HoaDonChiTietService;
import services.imp.ImpSV_H.HoaDonService;
import services.imp.ImpSV_H.KhachHangService;
import services.imp.ImpSV_H.NhanVienService;
import services.ISV_H.IDongHoChiTietService;
import services.ISV_H.IHoaDonChiTietService;
import services.ISV_H.IKhachHangService;
import services.ISV_H.IMauQuaiDeoService;
import services.ISV_H.INhanVienService;
import services.imp.ImpSV_H.MauQuaiDeoService;
import viewmodel.ViewModel_H.DongHoChiTietViewModel;
import viewmodel.ViewModel_H.HoaDonChiTietViewModel;
import viewmodel.ViewModel_H.HoaDonViewModel;
import viewmodel.ViewModel_H.SanPhamTronHoaDonModel;

/**
 *
 * @author Admin
 */
public class view_BanHangSua14_Jpanel extends javax.swing.JPanel {

    IHoaDonService hoaDonService = new HoaDonService();
    IDongHoChiTietService dongHoChiTietService = new ChiTietDongHoService();
    IKhachHangService khachHangService = new KhachHangService();
    INhanVienService nhanVienService = new NhanVienService();
    
    IMauQuaiDeoService mauQuaiDeoService = new MauQuaiDeoService();

    IHoaDonChiTietService hoaDonCTService = new HoaDonChiTietService();

    private static ArrayList<viewmodel.ViewModel_H.DongHoChiTietViewModel> dsDongHoChiTietREPO = new ArrayList();
    private static ArrayList<HoaDonViewModel> dsHoaDonRepo = new ArrayList();
    private static ArrayList<HoaDonChiTietViewModel> dsHoaDonChiTiet_viewModel_repo = new ArrayList();

    private String columns[] = {"Mã CTĐH", "Tên đồng hồ", "Tính năng", "Thời gian bảo hành", "Giới tính",
        "Kiểu máy", "Loại dây đeo", "Màu dây đeo", "Số lượng", "Giá bán",
        "Chương trình KM", "Giá sp sau KM", "Trạng thái"};

//    public static view_banHang_chinh viewFormBanHang;
//    public JTextField txtSDTDuocChon;
//    public JTextField txtTenKHDuocChon;
    /**
     * Creates new form view_BanHangSua14_Jpanel
     */
    public view_BanHangSua14_Jpanel() {
        initComponents();

        this.dsHoaDonChiTiet_viewModel_repo = hoaDonCTService.layTatCaThongTinHoaDonCT_viewModel();
        dsDongHoChiTietREPO = dongHoChiTietService.layThongTinChiTietDongHoNhuTable();

        fillCombobox_MauSacQuaiDeo();
        fillTableHoaDonCho();
        fillTableSanPhamHoaDon();

        fillComboboxLocGiaBan();
        fillColumnTotblHoaDonCT();

//        fillComboboxHinhThucThanhToan();
        lamMoiForm();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        pn_themSanPham = new javax.swing.JPanel();
        lbl_timSanPham = new javax.swing.JLabel();
        txt_timTheoTenDongHo = new javax.swing.JTextField();
        lbl_locKhoangGia = new javax.swing.JLabel();
        txt_locKhoangGia = new javax.swing.JTextField();
        cbx_loaiLocGia = new javax.swing.JComboBox<>();
        btn_locGia = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbl_showAllProduct = new javax.swing.JTable();
        btn_themSPVaoHoaDon = new javax.swing.JButton();
        btn_themSPVaoHoaDon1 = new javax.swing.JButton();
        lbl_timSanPham1 = new javax.swing.JLabel();
        cbx_searchByMauSac = new javax.swing.JComboBox<>();
        pn_hoaDonCho = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbl_hoaDonCho = new javax.swing.JTable();
        btn_taoHoaDon = new javax.swing.JButton();
        btn_taoHoaDon2 = new javax.swing.JButton();
        btn_suaHoaDon = new javax.swing.JButton();
        pn_hoaDon = new javax.swing.JPanel();
        pn_khachHang = new javax.swing.JPanel();
        lbl_tenKhachHang = new javax.swing.JLabel();
        txt_tenKhachHang = new javax.swing.JTextField();
        lbl_soDienThoai = new javax.swing.JLabel();
        txt_soDienThoai = new javax.swing.JTextField();
        btn_chonKH = new javax.swing.JButton();
        btn_chonKH1 = new javax.swing.JButton();
        lbl_maHoaDon = new javax.swing.JLabel();
        lbl_tongTien = new javax.swing.JLabel();
        lbl_tienKhachDua = new javax.swing.JLabel();
        txt_tienKhachDua = new javax.swing.JTextField();
        lbl_tienThua = new javax.swing.JLabel();
        lbl_ghiChu = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        txt_ghiChu = new javax.swing.JTextArea();
        jLabel9 = new javax.swing.JLabel();
        lbl_showTongTien = new javax.swing.JLabel();
        lbl_showTienThua = new javax.swing.JLabel();
        lbl_showMaHoaDon = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        btn_huyHoaDon = new javax.swing.JButton();
        btn_thanhToan = new javax.swing.JButton();
        lbl_maNVThanhToan = new javax.swing.JLabel();
        txt_maNhanVien = new javax.swing.JTextField();
        btn_huyHoaDon2 = new javax.swing.JButton();
        lbl_maNVThanhToan1 = new javax.swing.JLabel();
        lbl_tenKHTrenHoaDon = new javax.swing.JLabel();
        pn_hoaDonChiTiet = new javax.swing.JPanel();
        btn_suaSoLuongMua = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        tbl_showProductSelected = new javax.swing.JTable();
        btn_suaSoLuongMua1 = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTabbedPane1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        pn_themSanPham.setBackground(new java.awt.Color(0, 204, 255));
        pn_themSanPham.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Chọn sản phẩm", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 18))); // NOI18N

        lbl_timSanPham.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lbl_timSanPham.setText("Tìm màu quai đeo");

        txt_timTheoTenDongHo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txt_timTheoTenDongHo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_timTheoTenDongHoKeyTyped(evt);
            }
        });

        lbl_locKhoangGia.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lbl_locKhoangGia.setText("Lọc theo mức giá");

        txt_locKhoangGia.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        cbx_loaiLocGia.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        cbx_loaiLocGia.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btn_locGia.setBackground(new java.awt.Color(0, 51, 204));
        btn_locGia.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn_locGia.setForeground(new java.awt.Color(255, 255, 255));
        btn_locGia.setText("Lọc");
        btn_locGia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_locGiaActionPerformed(evt);
            }
        });

        tbl_showAllProduct.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tbl_showAllProduct.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbl_showAllProduct.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_showAllProductMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbl_showAllProduct);

        btn_themSPVaoHoaDon.setBackground(new java.awt.Color(0, 51, 204));
        btn_themSPVaoHoaDon.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn_themSPVaoHoaDon.setForeground(new java.awt.Color(255, 255, 255));
        btn_themSPVaoHoaDon.setText("Thêm nhiều sản phẩm");
        btn_themSPVaoHoaDon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_themSPVaoHoaDonActionPerformed(evt);
            }
        });

        btn_themSPVaoHoaDon1.setBackground(new java.awt.Color(0, 51, 204));
        btn_themSPVaoHoaDon1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn_themSPVaoHoaDon1.setForeground(new java.awt.Color(255, 255, 255));
        btn_themSPVaoHoaDon1.setText("Thêm 1 sản phẩm");
        btn_themSPVaoHoaDon1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_themSPVaoHoaDon1ActionPerformed(evt);
            }
        });

        lbl_timSanPham1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lbl_timSanPham1.setText("Tìm tên sản phẩm");

        cbx_searchByMauSac.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cbx_searchByMauSac.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbx_searchByMauSac.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbx_searchByMauSacActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pn_themSanPhamLayout = new javax.swing.GroupLayout(pn_themSanPham);
        pn_themSanPham.setLayout(pn_themSanPhamLayout);
        pn_themSanPhamLayout.setHorizontalGroup(
            pn_themSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn_themSanPhamLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pn_themSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(pn_themSanPhamLayout.createSequentialGroup()
                        .addGroup(pn_themSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_timTheoTenDongHo, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_timSanPham1, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(pn_themSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_timSanPham)
                            .addComponent(cbx_searchByMauSac, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pn_themSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pn_themSanPhamLayout.createSequentialGroup()
                                .addComponent(txt_locKhoangGia, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbx_loaiLocGia, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn_locGia, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lbl_locKhoangGia, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pn_themSanPhamLayout.createSequentialGroup()
                        .addComponent(btn_themSPVaoHoaDon1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_themSPVaoHoaDon)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pn_themSanPhamLayout.setVerticalGroup(
            pn_themSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn_themSanPhamLayout.createSequentialGroup()
                .addGroup(pn_themSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pn_themSanPhamLayout.createSequentialGroup()
                        .addComponent(lbl_timSanPham1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_timTheoTenDongHo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pn_themSanPhamLayout.createSequentialGroup()
                        .addGroup(pn_themSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbl_locKhoangGia)
                            .addComponent(lbl_timSanPham))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pn_themSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pn_themSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txt_locKhoangGia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cbx_loaiLocGia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btn_locGia))
                            .addComponent(cbx_searchByMauSac, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pn_themSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_themSPVaoHoaDon1)
                    .addComponent(btn_themSPVaoHoaDon)))
        );

        pn_hoaDonCho.setBackground(new java.awt.Color(0, 204, 255));
        pn_hoaDonCho.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Hóa đơn chờ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 18))); // NOI18N
        pn_hoaDonCho.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N

        tbl_hoaDonCho.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tbl_hoaDonCho.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbl_hoaDonCho.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_hoaDonChoMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tbl_hoaDonCho);

        btn_taoHoaDon.setBackground(new java.awt.Color(0, 51, 204));
        btn_taoHoaDon.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn_taoHoaDon.setForeground(new java.awt.Color(255, 255, 255));
        btn_taoHoaDon.setText("Tạo hóa đơn");
        btn_taoHoaDon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_taoHoaDonActionPerformed(evt);
            }
        });

        btn_taoHoaDon2.setBackground(new java.awt.Color(0, 51, 204));
        btn_taoHoaDon2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn_taoHoaDon2.setForeground(new java.awt.Color(255, 255, 255));
        btn_taoHoaDon2.setText("Xóa hóa đơn");
        btn_taoHoaDon2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_taoHoaDon2ActionPerformed(evt);
            }
        });

        btn_suaHoaDon.setBackground(new java.awt.Color(0, 51, 204));
        btn_suaHoaDon.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn_suaHoaDon.setForeground(new java.awt.Color(255, 255, 255));
        btn_suaHoaDon.setText("Sửa hóa đơn");
        btn_suaHoaDon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_suaHoaDonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pn_hoaDonChoLayout = new javax.swing.GroupLayout(pn_hoaDonCho);
        pn_hoaDonCho.setLayout(pn_hoaDonChoLayout);
        pn_hoaDonChoLayout.setHorizontalGroup(
            pn_hoaDonChoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn_hoaDonChoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pn_hoaDonChoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pn_hoaDonChoLayout.createSequentialGroup()
                        .addComponent(btn_taoHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_taoHoaDon2, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_suaHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pn_hoaDonChoLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 662, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        pn_hoaDonChoLayout.setVerticalGroup(
            pn_hoaDonChoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pn_hoaDonChoLayout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pn_hoaDonChoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_suaHoaDon, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pn_hoaDonChoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btn_taoHoaDon2)
                        .addComponent(btn_taoHoaDon)))
                .addContainerGap())
        );

        pn_hoaDon.setBackground(new java.awt.Color(0, 204, 255));
        pn_hoaDon.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Hóa đơn", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 18))); // NOI18N

        pn_khachHang.setBackground(new java.awt.Color(255, 255, 255));
        pn_khachHang.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin khách hàng", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N

        lbl_tenKhachHang.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lbl_tenKhachHang.setText("Tên khách hàng");

        txt_tenKhachHang.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        lbl_soDienThoai.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lbl_soDienThoai.setText("Số điện thoại");

        txt_soDienThoai.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        btn_chonKH.setBackground(new java.awt.Color(0, 51, 204));
        btn_chonKH.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn_chonKH.setForeground(new java.awt.Color(255, 255, 255));
        btn_chonKH.setText("Tìm");
        btn_chonKH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_chonKHActionPerformed(evt);
            }
        });

        btn_chonKH1.setBackground(new java.awt.Color(0, 51, 204));
        btn_chonKH1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn_chonKH1.setForeground(new java.awt.Color(255, 255, 255));
        btn_chonKH1.setText("Thêm");
        btn_chonKH1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_chonKH1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pn_khachHangLayout = new javax.swing.GroupLayout(pn_khachHang);
        pn_khachHang.setLayout(pn_khachHangLayout);
        pn_khachHangLayout.setHorizontalGroup(
            pn_khachHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn_khachHangLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pn_khachHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_tenKhachHang)
                    .addComponent(lbl_soDienThoai))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pn_khachHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txt_tenKhachHang, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE)
                    .addComponent(txt_soDienThoai))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pn_khachHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_chonKH)
                    .addComponent(btn_chonKH1))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        pn_khachHangLayout.setVerticalGroup(
            pn_khachHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn_khachHangLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pn_khachHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_tenKhachHang)
                    .addComponent(txt_tenKhachHang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_chonKH1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pn_khachHangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_soDienThoai)
                    .addComponent(txt_soDienThoai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_chonKH))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        lbl_maHoaDon.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lbl_maHoaDon.setText("Mã hóa đơn:");

        lbl_tongTien.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lbl_tongTien.setText("Tổng tiền:");

        lbl_tienKhachDua.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lbl_tienKhachDua.setText("Tiền khách đưa:");

        txt_tienKhachDua.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txt_tienKhachDua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_tienKhachDuaActionPerformed(evt);
            }
        });
        txt_tienKhachDua.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_tienKhachDuaKeyTyped(evt);
            }
        });

        lbl_tienThua.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lbl_tienThua.setText("Tiền thừa trả khách:");

        lbl_ghiChu.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lbl_ghiChu.setText("Ghi chú:");

        txt_ghiChu.setColumns(20);
        txt_ghiChu.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txt_ghiChu.setRows(5);
        jScrollPane4.setViewportView(txt_ghiChu);

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel9.setText("VND");

        lbl_showTongTien.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lbl_showTongTien.setText("150.000");

        lbl_showTienThua.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lbl_showTienThua.setText("0");

        lbl_showMaHoaDon.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lbl_showMaHoaDon.setText("HD01");

        jLabel19.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel19.setText("VND");

        jLabel21.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel21.setText("VND");

        btn_huyHoaDon.setBackground(new java.awt.Color(0, 51, 204));
        btn_huyHoaDon.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn_huyHoaDon.setForeground(new java.awt.Color(255, 255, 255));
        btn_huyHoaDon.setText("Hủy hóa đơn");
        btn_huyHoaDon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_huyHoaDonActionPerformed(evt);
            }
        });

        btn_thanhToan.setBackground(new java.awt.Color(0, 51, 204));
        btn_thanhToan.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn_thanhToan.setForeground(new java.awt.Color(255, 255, 255));
        btn_thanhToan.setText("Thanh toán");
        btn_thanhToan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_thanhToanMouseClicked(evt);
            }
        });
        btn_thanhToan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_thanhToanActionPerformed(evt);
            }
        });

        lbl_maNVThanhToan.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lbl_maNVThanhToan.setText("Mã nhân viên:");

        txt_maNhanVien.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txt_maNhanVien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_maNhanVienActionPerformed(evt);
            }
        });

        btn_huyHoaDon2.setBackground(new java.awt.Color(0, 51, 204));
        btn_huyHoaDon2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn_huyHoaDon2.setForeground(new java.awt.Color(255, 255, 255));
        btn_huyHoaDon2.setText("Làm mới");
        btn_huyHoaDon2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_huyHoaDon2ActionPerformed(evt);
            }
        });

        lbl_maNVThanhToan1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lbl_maNVThanhToan1.setText("Tên khách hàng:");

        lbl_tenKHTrenHoaDon.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lbl_tenKHTrenHoaDon.setText("Nguyễn Văn A");

        javax.swing.GroupLayout pn_hoaDonLayout = new javax.swing.GroupLayout(pn_hoaDon);
        pn_hoaDon.setLayout(pn_hoaDonLayout);
        pn_hoaDonLayout.setHorizontalGroup(
            pn_hoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pn_hoaDonLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lbl_ghiChu, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(275, 275, 275))
            .addGroup(pn_hoaDonLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(pn_hoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pn_hoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(pn_hoaDonLayout.createSequentialGroup()
                            .addGap(23, 23, 23)
                            .addGroup(pn_hoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(lbl_maNVThanhToan)
                                .addComponent(lbl_maNVThanhToan1)
                                .addComponent(lbl_maHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(pn_hoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lbl_tenKHTrenHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lbl_showMaHoaDon)
                                .addComponent(txt_maNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(pn_hoaDonLayout.createSequentialGroup()
                            .addGroup(pn_hoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(pn_hoaDonLayout.createSequentialGroup()
                                    .addGap(62, 62, 62)
                                    .addComponent(lbl_tongTien))
                                .addComponent(lbl_tienThua, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lbl_tienKhachDua, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addGap(18, 18, 18)
                            .addGroup(pn_hoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(pn_hoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbl_showTongTien)
                                    .addGroup(pn_hoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(pn_hoaDonLayout.createSequentialGroup()
                                            .addComponent(txt_tienKhachDua, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jLabel21))
                                        .addGroup(pn_hoaDonLayout.createSequentialGroup()
                                            .addComponent(lbl_showTienThua)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel19))))
                                .addGroup(pn_hoaDonLayout.createSequentialGroup()
                                    .addGap(154, 154, 154)
                                    .addComponent(jLabel9)))))
                    .addGroup(pn_hoaDonLayout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pn_hoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btn_huyHoaDon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btn_huyHoaDon2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btn_thanhToan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(pn_hoaDonLayout.createSequentialGroup()
                .addComponent(pn_khachHang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 9, Short.MAX_VALUE))
        );
        pn_hoaDonLayout.setVerticalGroup(
            pn_hoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn_hoaDonLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(pn_khachHang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(pn_hoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_maNVThanhToan)
                    .addComponent(txt_maNhanVien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(pn_hoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_maNVThanhToan1)
                    .addComponent(lbl_tenKHTrenHoaDon))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pn_hoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_maHoaDon)
                    .addComponent(lbl_showMaHoaDon))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pn_hoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_tongTien)
                    .addComponent(lbl_showTongTien)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pn_hoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_tienKhachDua)
                    .addComponent(txt_tienKhachDua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pn_hoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_tienThua)
                    .addComponent(lbl_showTienThua)
                    .addComponent(jLabel19))
                .addGap(18, 18, 18)
                .addComponent(lbl_ghiChu)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pn_hoaDonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pn_hoaDonLayout.createSequentialGroup()
                        .addComponent(btn_thanhToan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_huyHoaDon)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_huyHoaDon2))
                    .addComponent(jScrollPane4))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pn_hoaDonChiTiet.setBackground(new java.awt.Color(0, 204, 255));
        pn_hoaDonChiTiet.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Hóa đơn chi tiết", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 18))); // NOI18N

        btn_suaSoLuongMua.setBackground(new java.awt.Color(0, 51, 204));
        btn_suaSoLuongMua.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn_suaSoLuongMua.setForeground(new java.awt.Color(255, 255, 255));
        btn_suaSoLuongMua.setText("Xóa sản phẩm");
        btn_suaSoLuongMua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_suaSoLuongMuaActionPerformed(evt);
            }
        });

        tbl_showProductSelected.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tbl_showProductSelected.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbl_showProductSelected.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_showProductSelectedMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(tbl_showProductSelected);

        btn_suaSoLuongMua1.setBackground(new java.awt.Color(0, 51, 204));
        btn_suaSoLuongMua1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn_suaSoLuongMua1.setForeground(new java.awt.Color(255, 255, 255));
        btn_suaSoLuongMua1.setText("Sửa số lượng mua");
        btn_suaSoLuongMua1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_suaSoLuongMua1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pn_hoaDonChiTietLayout = new javax.swing.GroupLayout(pn_hoaDonChiTiet);
        pn_hoaDonChiTiet.setLayout(pn_hoaDonChiTietLayout);
        pn_hoaDonChiTietLayout.setHorizontalGroup(
            pn_hoaDonChiTietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn_hoaDonChiTietLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pn_hoaDonChiTietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6)
                    .addGroup(pn_hoaDonChiTietLayout.createSequentialGroup()
                        .addComponent(btn_suaSoLuongMua, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn_suaSoLuongMua1, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pn_hoaDonChiTietLayout.setVerticalGroup(
            pn_hoaDonChiTietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pn_hoaDonChiTietLayout.createSequentialGroup()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pn_hoaDonChiTietLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_suaSoLuongMua)
                    .addComponent(btn_suaSoLuongMua1)))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(pn_themSanPham, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pn_hoaDonChiTiet, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pn_hoaDonCho, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pn_hoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(165, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pn_hoaDon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(pn_hoaDonCho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pn_themSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pn_hoaDonChiTiet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(334, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Bán hàng", jPanel1);

        jScrollPane1.setViewportView(jTabbedPane1);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void btn_locGiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_locGiaActionPerformed
        locTheoKhoangGia();
    }//GEN-LAST:event_btn_locGiaActionPerformed

    private void tbl_showAllProductMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_showAllProductMouseClicked
        //        them1DongHoVaoTableChiTietHoaDon();
    }//GEN-LAST:event_tbl_showAllProductMouseClicked

    private void btn_themSPVaoHoaDonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_themSPVaoHoaDonActionPerformed
        themNhieuSanPhamVaoHoaDonChiTiet();
    }//GEN-LAST:event_btn_themSPVaoHoaDonActionPerformed

    private void btn_themSPVaoHoaDon1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_themSPVaoHoaDon1ActionPerformed

        them1DongHoVaoTableChiTietHoaDon();
    }//GEN-LAST:event_btn_themSPVaoHoaDon1ActionPerformed

    private void tbl_hoaDonChoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_hoaDonChoMouseClicked
        int rowSelected = tbl_hoaDonCho.getSelectedRow();
        String idHoaDon = tbl_hoaDonCho.getValueAt(rowSelected, 0).toString();
        String tenNV = tbl_hoaDonCho.getValueAt(rowSelected, 2).toString();

        lbl_showMaHoaDon.setText(idHoaDon);
        lbl_tenKHTrenHoaDon.setText(tbl_hoaDonCho.getValueAt(rowSelected, 1).toString());

        int maNV = nhanVienService.layIDNhanVienTheoTen(tenNV);
        txt_maNhanVien.setText(String.valueOf(maNV));

        //        System.out.println("Mã hóa đơn click table hóa đơn: " + idHoaDon);
        fillTableHoaDonChiTietSP(Integer.parseInt(idHoaDon));
    }//GEN-LAST:event_tbl_hoaDonChoMouseClicked

    private void btn_taoHoaDonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_taoHoaDonActionPerformed
        taoHoaDonCho();
        fillTableHoaDonCho();
    }//GEN-LAST:event_btn_taoHoaDonActionPerformed

    private void btn_taoHoaDon2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_taoHoaDon2ActionPerformed
        xoaHoaDon();
        fillTableHoaDonCho();
    }//GEN-LAST:event_btn_taoHoaDon2ActionPerformed

    private void btn_chonKHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_chonKHActionPerformed
        timTenKHBySDT();
    }//GEN-LAST:event_btn_chonKHActionPerformed

    private void txt_tienKhachDuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_tienKhachDuaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_tienKhachDuaActionPerformed

    private void txt_tienKhachDuaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_tienKhachDuaKeyTyped
        if (txt_tienKhachDua.getText().isEmpty()) {
            return;
        }
        double tienKHDua = Double.parseDouble(txt_tienKhachDua.getText());
        double tongTien = Double.parseDouble(lbl_showTongTien.getText());
        double tienThua = tienKHDua - tongTien;
        lbl_showTienThua.setText(String.valueOf(tienThua));
    }//GEN-LAST:event_txt_tienKhachDuaKeyTyped

    private void btn_huyHoaDonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_huyHoaDonActionPerformed
        DefaultTableModel model = (DefaultTableModel) tbl_showProductSelected.getModel();
        model.setRowCount(0);
        tbl_showProductSelected.setModel(model);
    }//GEN-LAST:event_btn_huyHoaDonActionPerformed

    private void btn_thanhToanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_thanhToanMouseClicked

    }//GEN-LAST:event_btn_thanhToanMouseClicked

    private void btn_thanhToanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_thanhToanActionPerformed
        thanhToanHoaDon();
    }//GEN-LAST:event_btn_thanhToanActionPerformed

    private void txt_maNhanVienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_maNhanVienActionPerformed

    }//GEN-LAST:event_txt_maNhanVienActionPerformed

    private void btn_huyHoaDon2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_huyHoaDon2ActionPerformed
        lamMoiForm();
    }//GEN-LAST:event_btn_huyHoaDon2ActionPerformed

    private void btn_suaSoLuongMuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_suaSoLuongMuaActionPerformed
        xoa1SanPhamKhoiHoaDonChiTiet();
    }//GEN-LAST:event_btn_suaSoLuongMuaActionPerformed

    private void tbl_showProductSelectedMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_showProductSelectedMouseClicked
        suaSoLuongMuaSP();
    }//GEN-LAST:event_tbl_showProductSelectedMouseClicked

    private void btn_suaSoLuongMua1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_suaSoLuongMua1ActionPerformed
//        suaSoLuongMuaSP();
    }//GEN-LAST:event_btn_suaSoLuongMua1ActionPerformed

    private void txt_timTheoTenDongHoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_timTheoTenDongHoKeyTyped
        searchByEnterTenDH();
    }//GEN-LAST:event_txt_timTheoTenDongHoKeyTyped

    private void cbx_searchByMauSacActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbx_searchByMauSacActionPerformed
        searchByMauSacDH();
        
    }//GEN-LAST:event_cbx_searchByMauSacActionPerformed

    private void btn_suaHoaDonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_suaHoaDonActionPerformed
        suaHoaDon();
        fillTableHoaDonCho();
    }//GEN-LAST:event_btn_suaHoaDonActionPerformed

    private void btn_chonKH1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_chonKH1ActionPerformed
        String tenKH = txt_tenKhachHang.getText();
        String sdt = txt_soDienThoai.getText();
        
        KhachHang khachHang = new KhachHang();
        khachHang.setTenKH(tenKH);
        khachHang.setSoDienThoai(sdt);
        
        khachHangService.themMoiKhachHang(khachHang);
        
    }//GEN-LAST:event_btn_chonKH1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_chonKH;
    private javax.swing.JButton btn_chonKH1;
    private javax.swing.JButton btn_huyHoaDon;
    private javax.swing.JButton btn_huyHoaDon2;
    private javax.swing.JButton btn_locGia;
    private javax.swing.JButton btn_suaHoaDon;
    private javax.swing.JButton btn_suaSoLuongMua;
    private javax.swing.JButton btn_suaSoLuongMua1;
    private javax.swing.JButton btn_taoHoaDon;
    private javax.swing.JButton btn_taoHoaDon2;
    private javax.swing.JButton btn_thanhToan;
    private javax.swing.JButton btn_themSPVaoHoaDon;
    private javax.swing.JButton btn_themSPVaoHoaDon1;
    private javax.swing.JComboBox<String> cbx_loaiLocGia;
    private javax.swing.JComboBox<String> cbx_searchByMauSac;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lbl_ghiChu;
    private javax.swing.JLabel lbl_locKhoangGia;
    private javax.swing.JLabel lbl_maHoaDon;
    private javax.swing.JLabel lbl_maNVThanhToan;
    private javax.swing.JLabel lbl_maNVThanhToan1;
    private javax.swing.JLabel lbl_showMaHoaDon;
    private javax.swing.JLabel lbl_showTienThua;
    private javax.swing.JLabel lbl_showTongTien;
    private javax.swing.JLabel lbl_soDienThoai;
    private javax.swing.JLabel lbl_tenKHTrenHoaDon;
    private javax.swing.JLabel lbl_tenKhachHang;
    private javax.swing.JLabel lbl_tienKhachDua;
    private javax.swing.JLabel lbl_tienThua;
    private javax.swing.JLabel lbl_timSanPham;
    private javax.swing.JLabel lbl_timSanPham1;
    private javax.swing.JLabel lbl_tongTien;
    private javax.swing.JPanel pn_hoaDon;
    private javax.swing.JPanel pn_hoaDonChiTiet;
    private javax.swing.JPanel pn_hoaDonCho;
    private javax.swing.JPanel pn_khachHang;
    private javax.swing.JPanel pn_themSanPham;
    private javax.swing.JTable tbl_hoaDonCho;
    private javax.swing.JTable tbl_showAllProduct;
    private javax.swing.JTable tbl_showProductSelected;
    private javax.swing.JTextArea txt_ghiChu;
    private javax.swing.JTextField txt_locKhoangGia;
    private javax.swing.JTextField txt_maNhanVien;
    private javax.swing.JTextField txt_soDienThoai;
    private javax.swing.JTextField txt_tenKhachHang;
    private javax.swing.JTextField txt_tienKhachDua;
    private javax.swing.JTextField txt_timTheoTenDongHo;
    // End of variables declaration//GEN-END:variables
private void locTheoKhoangGia() {
//        System.out.println("Gia loc: " + giaLoc);
//        String loaiLoc = this.getLoaiLocGia();
//        System.out.println("Loai loc: " + loaiLoc);

        ArrayList<DongHoChiTietViewModel> ds_dhChiTiet = new ArrayList<>();

        DefaultTableModel tableModel = new DefaultTableModel(columns, 0);
        tableModel.setRowCount(0);
        //String locGia[] = {"<", ">=", "<=", ">", "="};
        String loaiLoc = cbx_loaiLocGia.getSelectedItem().toString();
//        System.out.println("Loại lọc : " + loaiLoc);
        double giaLoc = Double.parseDouble(txt_locKhoangGia.getText());

//        System.out.println("Gía lọc : " + giaLoc);
        for (viewmodel.ViewModel_H.DongHoChiTietViewModel x : dsDongHoChiTietREPO) {
//            System.out.println("giá bán: " + x.getGiaBan());
            if (x.getSoLuong() > 0) {
                if (loaiLoc.equalsIgnoreCase("=")) {
                    if (giaLoc == x.getGiaBan()) {
                        ds_dhChiTiet.add(x);
                    }
                } else if (loaiLoc.equalsIgnoreCase("<")) { // gia loc < 200 
                    if (giaLoc > x.getGiaBan()) {
                        ds_dhChiTiet.add(x);
                    }
                } else if (loaiLoc.equalsIgnoreCase(">")) { // gia loc < 200 
                    if (giaLoc < x.getGiaBan()) {
                        ds_dhChiTiet.add(x);
                    }
                } else if (loaiLoc.equalsIgnoreCase(">=")) { // gia loc < 200 
                    if (giaLoc <= x.getGiaBan()) {
                        ds_dhChiTiet.add(x);
                    }
                } else if (loaiLoc.equalsIgnoreCase("<=")) { // gia loc < 200 
                    if (giaLoc >= x.getGiaBan()) {
                        ds_dhChiTiet.add(x);
                    }
                }
            }
        }

//        ds_dhChiTiet = dongHoChiTietService.locTheoKhoangGia(loaiLoc, giaLoc);
        //{"Tên đồng hồ","Tính năng","Thời gian bảo hành","Giới tính", "Kiểu máy","Loại dây đeo"
        //,"Màu dây đeo","Số lượng","Giá bán","Chương trình KM","Giá sp sau KM"}
        for (DongHoChiTietViewModel x : ds_dhChiTiet) {
            Object object[] = new Object[]{x.getIdCTDH(), x.getTenDongHo(), x.getTinhNang(), x.getThoiGianBH() + " tháng", x.getLoaiGioiTinh(),
                x.getLoaiKieuMay(), x.getLoaiDayDeo(), x.getMauDayDeo(), x.getSoLuong(), x.getGiaBan(), x.getChuongTrinhKM(),
                x.getGiaSauKM(), x.getTrangThaiDHCT()};
            tableModel.addRow(object);
        }

        tbl_showAllProduct.setModel(tableModel);
    }

    private void fillTableHoaDonCho() {

        String columns[] = {"Mã hóa đơn", "Tên khách hàng", "Tên nhân viên", "Trạng thái hóa đơn"};
        DefaultTableModel tableModel = new DefaultTableModel(columns, 0);
        tableModel.setRowCount(0);

        ArrayList<HoaDonViewModel> dsHoaDonCho = new ArrayList<>();
        dsHoaDonCho.clear();
        for (HoaDonViewModel x : hoaDonService.layThongTinHoaDonModel()) {
            if (x.getTrangThaiHoaDon().equalsIgnoreCase("Chờ thanh toán")) {
                dsHoaDonCho.add(x);
                dsHoaDonRepo.add(x);
            }
        }

        for (HoaDonViewModel x : dsHoaDonCho) {
            Object objects[] = new Object[]{x.getMaHoaDon(), x.getTenKhachHang(), x.getTenNhanVien(), x.getTrangThaiHoaDon()};
            tableModel.addRow(objects);
        }
        tbl_hoaDonCho.setModel(tableModel);

    }

    private void fillTableSanPhamHoaDon() {
        String columns[] = {"Mã CTĐH", "Tên đồng hồ", "Tính năng", "Thời gian bảo hành", "Giới tính",
            "Kiểu máy", "Loại dây đeo", "Màu dây đeo", "Số lượng", "Giá bán",
            "Chương trình KM", "Giá sp sau KM", "Trạng thái"};

        DefaultTableModel tableModel = new DefaultTableModel(columns, 0);
        tableModel.setRowCount(0);

        for (viewmodel.ViewModel_H.DongHoChiTietViewModel x : dsDongHoChiTietREPO) {
            if (x.getSoLuong() > 0) {
                Object object[] = new Object[]{x.getIdCTDH(), x.getTenDongHo(), x.getTinhNang(), x.getThoiGianBH() + " tháng", x.getLoaiGioiTinh(),
                    x.getLoaiKieuMay(), x.getLoaiDayDeo(), x.getMauDayDeo(), x.getSoLuong(), x.getGiaBan(), x.getChuongTrinhKM(),
                    x.getGiaSauKM(), x.getTrangThaiDHCT()};
                tableModel.addRow(object);
            }
        }

        tbl_showAllProduct.setModel(tableModel);
    }

    private void fillTableHoaDonChiTietSP(int maHoaDon) {

//        System.out.println("Size of hoaDonChiTiet sang trang load dữ liệu : " + dsHoaDonChiTiet_viewModel_repo.size());
        ArrayList<HoaDonChiTietViewModel> listChiTietVModel = new ArrayList<>();
        for (HoaDonChiTietViewModel x : dsHoaDonChiTiet_viewModel_repo) {
            if (x.getIdHoaDon() == maHoaDon) {
                listChiTietVModel.add(x);
            }
        }

//        System.out.println("Size of list chi tiết hóa đơn" + listChiTietVModel.size());
        DefaultTableModel model = (DefaultTableModel) tbl_showProductSelected.getModel();
        model.setRowCount(0);

        Double tongTienHoaDon = 0.0;
        for (viewmodel.ViewModel_H.HoaDonChiTietViewModel x : listChiTietVModel) {
            if (x.getSoLuong() > 0) {
                tongTienHoaDon += x.getThanhTien();
                Object[] row = new Object[]{
                    x.getIdHoaDon(),
                    x.getIdChiTietDH(),
                    x.getTenDH(),
                    x.getSoLuong(),
                    x.getGiaBan(),
                    x.getGiaBanGiam(),
                    x.getThanhTien()
                };
                model.addRow(row);
            }
        }
        lbl_showTongTien.setText(String.valueOf(tongTienHoaDon));
        tbl_showProductSelected.setModel(model);
        System.out.println("Load dữ liệu thành công lên bảng hóa đơn chi tiết");
    }

    private void taoHoaDonCho() {
        if (txt_maNhanVien.getText().equalsIgnoreCase("")) {
            JOptionPane.showMessageDialog(this, "Bạn cần nhập chọn khách hàng, nhập mã nhân viên để tạo hóa đơn");
            return;
        }

        if (txt_maNhanVien.getText().equalsIgnoreCase("")) {
            JOptionPane.showMessageDialog(this, "Bạn cần nhập nhập mã nhân viên để tạo hóa đơn");
            return;
        }

        int idMaKH = this.getIDKhachHangBySDT();
        if (idMaKH == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn khách hàng để tạo hóa đơn");
            return;
        }

        int idNhanVien = Integer.parseInt(txt_maNhanVien.getText());

        HoaDon hoaDon = new HoaDon();
        hoaDon.setIdKhachHang(idMaKH);
        hoaDon.setIdNhanVien(idNhanVien);

        hoaDonService.taoHoaDon(hoaDon);

    }

    public int getIDKhachHangBySDT() {
        String sdtSearch = txt_soDienThoai.getText().trim();
        if (sdtSearch.isBlank()) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn khách hàng để thực hiện thêm hóa đơn ");
            return -1;
        }
        ArrayList<KhachHang> ds_khachHang = new ArrayList<>();
        ds_khachHang = khachHangService.layTatCaThongTinKhachHang();
        System.out.println("Size of khachhang: " + ds_khachHang.size());
        for (KhachHang x : ds_khachHang) {
            System.out.println(x.getSoDienThoai());
            if (x.getSoDienThoai().equalsIgnoreCase(sdtSearch)) {
                return x.getMaKH();
            }
        }
        return -1;
    }

    private void xoaHoaDon() {
        int rowSelected = tbl_hoaDonCho.getSelectedRow();
        if (rowSelected <= 0) {
            JOptionPane.showMessageDialog(this, "Bạn cần chọn 1 hóa đơn trên bảng, để thực hiện xóa");
            return;
        }

        int idHoaDonDelete = Integer.parseInt(tbl_hoaDonCho.getValueAt(rowSelected, 0).toString());
        int checkXoa = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn xóa hóa đơn chờ ? ", "Xóa hóa đơn ?", JOptionPane.YES_NO_OPTION);
        System.out.println("check xoa : " + checkXoa);
        if (checkXoa == 1) {
            return;
        }
        hoaDonService.xoaHoaDon(idHoaDonDelete);
    }

    private void fillComboboxLocGiaBan() {
        String locGia[] = {"<", ">=", "<=", ">", "="};
        cbx_loaiLocGia.removeAllItems();
        for (int i = 0; i < locGia.length; i++) {
            cbx_loaiLocGia.addItem(locGia[i]);
        }
    }

    private String getLoaiLocGia() {
        String loaiLoc = cbx_loaiLocGia.getSelectedItem().toString();
        if (loaiLoc.equalsIgnoreCase("=")) {
            return "bang";
        } else if (loaiLoc.equalsIgnoreCase("<")) {
            return "nhoHon";
        } else if (loaiLoc.equalsIgnoreCase(">")) {
            return "lonHon";
        } else if (loaiLoc.equalsIgnoreCase(">=")) {
            return "lonHonBang";
        } else if (loaiLoc.equalsIgnoreCase("<=")) {
            return "nhoHonBang";
        }
        return "";

    }

    private void fillColumnTotblHoaDonCT() {
        DefaultTableModel model = new DefaultTableModel();
        // mã hóa đơn, mã sp chi tiest, tên đồng hò, số lượng, giá bán, tổng tiền 
        model.setColumnCount(0);
        model.addColumn("Mã hóa đơn");
        model.addColumn("Mã SPCT");
        model.addColumn("Tên SP");
        model.addColumn("Số lượng");
        model.addColumn("Giá bán");
        model.addColumn("Giá bán sau giảm");
        model.addColumn("Thành tiền");
        model.setRowCount(0);
        tbl_showProductSelected.setModel(model);
    }

    private void thanhToanHoaDon() {
        if (txt_maNhanVien.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Bạn cần nhập mã nhân viên của bạn để thực hiện thanh toán");
            return;
        }
        if (txt_tienKhachDua.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Bạn cần nhập tiền khách hàng thanh toán");
            return;
        }

//        int idHoaDon = Integer.parseInt(s)
        int viTrihoaDonDuocChon = tbl_hoaDonCho.getSelectedRow();
        int idHoaDon = Integer.parseInt(tbl_hoaDonCho.getValueAt(viTrihoaDonDuocChon, 0).toString());

        ArrayList<HoaDonChiTietViewModel> dsSanPhamMua = new ArrayList<>();
        for (HoaDonChiTietViewModel x : dsHoaDonChiTiet_viewModel_repo) {
            if (x.getIdHoaDon() == idHoaDon) {
                dsSanPhamMua.add(x);
            }
        }

//        -- tổng tiền, ghi chú, ngày thanh toán, trạng thái ( hóa đơn ) 
        Double tongTien = Double.parseDouble(lbl_showTongTien.getText());
        String ghiChu = txt_ghiChu.getText();

        System.out.println("Size of hóa đơn chi tiết trước khi thanh toán: " + dsHoaDonChiTiet_viewModel_repo.size());

        for (HoaDonChiTietViewModel x : dsSanPhamMua) {
            //Integer idHoaDon, Integer idChiTietDH, Integer soLuong, Double donGia,
            // Double thanhTien, Double donGiaKhiGiam) {

            HoaDonChiTiet hdct = new HoaDonChiTiet(x.getIdHoaDon(), x.getIdChiTietDH(), x.getSoLuong(), x.getGiaBan(), x.getThanhTien(), x.getGiaBanGiam());
            hoaDonCTService.taoMoiHoaDonChiTiet(hdct);
            hoaDonService.capNhatHoaDonSauKhiThanhToan(x.getIdHoaDon(), tongTien, ghiChu);
            for (DongHoChiTietViewModel y : dsDongHoChiTietREPO) {
                if (y.getIdCTDH() == x.getIdChiTietDH()) {
                    dongHoChiTietService.capNhatSoLuongDHCT(y.getSoLuong(), x.getIdChiTietDH());
                    dongHoChiTietService.capNhatTrangThaiDongHo(y.getSoLuong());
                }
            }
        }

        ArrayList<HoaDonChiTietViewModel> listChiTietVModel = new ArrayList<>();
        for (int i = 0; i < dsHoaDonChiTiet_viewModel_repo.size(); i++) {
            if (dsHoaDonChiTiet_viewModel_repo.get(i).getIdHoaDon() == idHoaDon) {
                dsHoaDonChiTiet_viewModel_repo.remove(i);
            }
        }
        DefaultTableModel model = (DefaultTableModel) tbl_showProductSelected.getModel();
        model.setRowCount(0);
        tbl_showProductSelected.setModel(model);
        System.out.println("Size of hóa đơn chi tiết hiện tại: " + dsHoaDonChiTiet_viewModel_repo.size());
        fillTableHoaDonCho();
        fillTableSanPhamHoaDon();
        this.lamMoiForm();
        JOptionPane.showMessageDialog(this, "Thanh toán thành công");

        inHoaDon(idHoaDon);

    }

    private void them1DongHoVaoTableChiTietHoaDon() {
//        int soLuongMua =  0;

        int selectedHoaDon = tbl_hoaDonCho.getSelectedRow();
        int selectedProduct = tbl_showAllProduct.getSelectedRow();
        if (selectedHoaDon < 0) {
            JOptionPane.showMessageDialog(this, "Chọn hóa đơn, sau đó chọn sản phẩm");
            return;
        }
        if (selectedProduct < 0) {
            JOptionPane.showMessageDialog(this, "Chọn sản phẩm trên bảng trước khi thêm");
            return;
        }

        int maSanPham = Integer.parseInt(tbl_showAllProduct.getValueAt(selectedProduct, 0).toString());
        int soLuong = Integer.parseInt(tbl_showAllProduct.getValueAt(selectedProduct, 8).toString());
        String soLuongMuaStr = JOptionPane.showInputDialog("Số lượng sản phẩm đang có: " + soLuong);
        if (soLuongMuaStr == null) {
            return;
        }
        int soLuongMua = Integer.parseInt(soLuongMuaStr);
        if (soLuongMua < 0) {
            JOptionPane.showMessageDialog(this, "Bạn cần nhập số lượng mua > 0");
            return;
        }
        if (soLuongMua > soLuong) {
            JOptionPane.showMessageDialog(this, "Không đủ sản phẩm bán");
            return;
        }
        if (soLuongMua <= soLuong || soLuongMua==0) {
            viewmodel.ViewModel_H.DongHoChiTietViewModel sp = new viewmodel.ViewModel_H.DongHoChiTietViewModel();
            // lấy ra đối tượng sản phẩm được chọn
            for (viewmodel.ViewModel_H.DongHoChiTietViewModel x : dsDongHoChiTietREPO) {
                if (x.getIdCTDH() == maSanPham) {
                    sp = x;
                    //                System.out.println("Gán giá trị sản phẩm thành công " + sp);
                    x.setSoLuong(x.getSoLuong() - soLuongMua);

                    this.fillTableSanPhamHoaDon();
                    break;
                }
            }

            if (sp == null) {
                System.out.println("Chưa chọn được sản phẩm thành công :<");
                return;
            }

            //        System.out.println("SP được chọn" + sp.getTenDongHo());
            String maHoaDonStr = tbl_hoaDonCho.getValueAt(selectedHoaDon, 0).toString();
            int maHoaDon = Integer.parseInt(maHoaDonStr);

            System.out.println("Mã hóa đơn được chọn: " + maHoaDon);

            viewmodel.ViewModel_H.HoaDonChiTietViewModel hdct = new viewmodel.ViewModel_H.HoaDonChiTietViewModel();
            hdct.setIdChiTietDH(maSanPham);
            hdct.setIdHoaDon(maHoaDon);
            hdct.setGiaBan(sp.getGiaBan());
            hdct.setGiaBanGiam(sp.getGiaSauKM());
            hdct.setTenDH(sp.getTenDongHo());
            hdct.setSoLuong(soLuongMua);
            hdct.setThanhTien(soLuongMua * hdct.getGiaBanGiam());

            boolean isNotExisted = true;

            for (viewmodel.ViewModel_H.HoaDonChiTietViewModel h : dsHoaDonChiTiet_viewModel_repo) {
                if (h.getIdHoaDon() == maHoaDon && h.getIdChiTietDH() == maSanPham) {
                    h.setSoLuong(h.getSoLuong() + hdct.getSoLuong());
                    isNotExisted = false;
                    break;
                }
            }
            if (isNotExisted == true) {
                dsHoaDonChiTiet_viewModel_repo.add(hdct);
            }

            fillTableHoaDonChiTietSP(maHoaDon);
        }
    }

    private void themNhieuSanPhamVaoHoaDonChiTiet() {
        int checkChonTableSanPhamChiTiet = tbl_showAllProduct.getSelectedRow();
        int selectedProduct[] = tbl_showAllProduct.getSelectedRows();
        int selectedHoaDon = tbl_hoaDonCho.getSelectedRow();

        if (selectedHoaDon < 0) {
            JOptionPane.showMessageDialog(this, "Chọn hóa đơn, sau đó chọn sản phẩm");
            return;
        }
        if (checkChonTableSanPhamChiTiet < 0) {
            JOptionPane.showMessageDialog(this, "Chọn sản phẩm trên bảng trước khi thêm");
            return;
        }

        Integer maSanPham[] = new Integer[selectedProduct.length];

        for (int i = 0; i < selectedProduct.length; i++) {
            maSanPham[i] = Integer.parseInt(tbl_showAllProduct.getValueAt(selectedProduct[i], 0).toString());

        }

        // tạo mảng mới để lưu trữ các giá trị được chọn 
        ArrayList<DongHoChiTietViewModel> dsspthem = new ArrayList<DongHoChiTietViewModel>();

        for (int i = 0; i < dsDongHoChiTietREPO.size(); i++) {
            for (int j = 0; j < maSanPham.length; j++) {
                if (dsDongHoChiTietREPO.get(i).getIdCTDH() == maSanPham[j]) {

                    dsspthem.add(dsDongHoChiTietREPO.get(i));
                    System.out.println("Gán giá trị sản phẩm thành công ");
                    dsDongHoChiTietREPO.get(i).setSoLuong(dsDongHoChiTietREPO.get(i).getSoLuong() - 1);
                    continue;
                }
            }
        }
        this.fillTableSanPhamHoaDon();
        if (dsspthem == null) {
            System.out.println("Chưa chọn được sản phẩm thành công :<");
            return;
        }

//        System.out.println("SP được chọn" + sp.getTenDongHo());
        String maHoaDonStr = tbl_hoaDonCho.getValueAt(selectedHoaDon, 0).toString();
        int maHoaDon = Integer.parseInt(maHoaDonStr);

//        System.out.println("Mã hóa đơn được chọn: " + maHoaDon);
        for (DongHoChiTietViewModel x : dsspthem) {
            HoaDonChiTietViewModel hdct = new HoaDonChiTietViewModel();
            hdct.setIdChiTietDH(x.getIdCTDH());
            hdct.setIdHoaDon(maHoaDon);
            hdct.setGiaBan(x.getGiaSauKM());
            hdct.setGiaBanGiam(x.getGiaSauKM());
            hdct.setTenDH(x.getTenDongHo());
            hdct.setSoLuong(1);
            hdct.setThanhTien(x.getSoLuong() * x.getGiaSauKM());

            boolean isNotExisted = true;

            for (HoaDonChiTietViewModel h : dsHoaDonChiTiet_viewModel_repo) {
                if (h.getIdHoaDon() == maHoaDon && h.getIdChiTietDH() == x.getIdCTDH()) {
                    h.setSoLuong(h.getSoLuong() + hdct.getSoLuong());
                    isNotExisted = false;
                    break;
                }
            }
            if (isNotExisted == true) {
                dsHoaDonChiTiet_viewModel_repo.add(hdct);
            }
        }

        fillTableHoaDonChiTietSP(maHoaDon);

    }

    private void xoa1SanPhamKhoiHoaDonChiTiet() {
        int rowSelected = tbl_showProductSelected.getSelectedRow();
        if (rowSelected < 0) {
            JOptionPane.showMessageDialog(this, "Bạn cần chọn 1 sản phẩm muốn xóa trên bảng hóa đơn chi tiết");
            return;
        }

        int maHoaDon = Integer.parseInt(tbl_showProductSelected.getValueAt(rowSelected, 0).toString());
        Integer maSPCT = Integer.parseInt(tbl_showProductSelected.getValueAt(rowSelected, 1).toString());
        Integer soLuongXoa = Integer.parseInt(tbl_showProductSelected.getValueAt(rowSelected, 3).toString());

        // các hàng, mỗi hàng sẽ có mã hóa đơn giống nhau, khác nhau về mã chi tiết sản phẩm 
        // xóa sản phẩm khỏi hóa đơn chi tiết thông qua mã hóa đơn, mã sản phẩm 
        for (int i = 0; i < dsHoaDonChiTiet_viewModel_repo.size(); i++) {
            if (dsDongHoChiTietREPO.get(i).getIdCTDH() == maSPCT) {
                int soLuongUpdate = dsDongHoChiTietREPO.get(i).getSoLuong() + soLuongXoa;
                dsDongHoChiTietREPO.get(i).setSoLuong(soLuongUpdate);
//                dongHoChiTietService.capNhatSoLuongDHCT(soLuongUpdate);
                break;
            }
        }

        // xóa sản phẩm khỏi hóa đơn chi tiết thông qua mã hóa đơn, mã sản phẩm 
        for (int i = 0; i < dsHoaDonChiTiet_viewModel_repo.size(); i++) {
            if (dsHoaDonChiTiet_viewModel_repo.get(i).getIdHoaDon() == maHoaDon && dsHoaDonChiTiet_viewModel_repo.get(i).getIdChiTietDH() == maSPCT) {
                dsHoaDonChiTiet_viewModel_repo.remove(i);
                hoaDonCTService.xoaHoaDonChiTiet(maHoaDon, maSPCT);
            }
        }

        fillTableHoaDonChiTietSP(maHoaDon);
        fillTableSanPhamHoaDon();

    }

    public void suaSoLuongMuaSP() {
        int rowSelected = tbl_showProductSelected.getSelectedRow();
        if (rowSelected < 0) {
            JOptionPane.showMessageDialog(this, "Bạn cần chọn 1 sản phẩm muốn SỬA số lượng trên bảng hóa đơn chi tiết");
            return;
        }

//        a = số lượng tổng sửa (3)
//        b = a + c ( tổng số lượng tổng sửa + số lượng trong kho ) 
//        c = số lượng tổng cả trong kho  
//        d = số lượng sửa mới (1)
        int maHoaDon = Integer.parseInt(tbl_showProductSelected.getValueAt(rowSelected, 0).toString());
        int maSPCT = Integer.parseInt(tbl_showProductSelected.getValueAt(rowSelected, 1).toString());
        System.out.println("Mã hóa đơn đc chọn: " + maHoaDon);
        System.out.println("Mã sản phẩm đc chọn: " + maSPCT);

        int soLuongTongKho = 0;
        for (DongHoChiTietViewModel x : dsDongHoChiTietREPO) {
            if (x.getIdCTDH() == maSPCT) {
                soLuongTongKho = x.getSoLuong();
                break;
            }
        }

        int soLuongTongSua = Integer.parseInt(tbl_showProductSelected.getValueAt(rowSelected, 3).toString());
        int soLuongTongSua_tongKho = soLuongTongKho + soLuongTongSua;
        String soLuongMoiStr = JOptionPane.showInputDialog("Số lượng sản phẩm đang có trong giỏ hàng: " + soLuongTongSua);

        if (soLuongMoiStr == null) {
            return;
        }

        int soLuongSuaMoi = Integer.parseInt(soLuongMoiStr);
        if (soLuongSuaMoi < 0) {
            JOptionPane.showMessageDialog(this, "Bạn có thể sửa số lượng mua > 0 hoặc = 0");
            return;
        }
        System.out.println("Số lượng sửa mới : " + soLuongSuaMoi);
        if (soLuongSuaMoi == soLuongTongSua_tongKho) {
            for (int i = 0; i < dsDongHoChiTietREPO.size(); i++) {
                if (dsDongHoChiTietREPO.get(i).getIdCTDH() == maSPCT) {

                    int soLuongUpdateKhoHang = 0;
                    dsDongHoChiTietREPO.get(i).setSoLuong(soLuongUpdateKhoHang);
//                    dongHoChiTietService.capNhatSoLuongDHCT(soLuongUpdateKhoHang);
                    break;
                }
            }

            for (int i = 0; i < dsHoaDonChiTiet_viewModel_repo.size(); i++) {
                if (dsHoaDonChiTiet_viewModel_repo.get(i).getIdHoaDon() == maHoaDon) {
//                    dongHoChiTietService.capNhatSoLuongDHCT(soLuongUpdateKhoHang);
                    dsHoaDonChiTiet_viewModel_repo.get(i).setSoLuong(soLuongTongSua_tongKho);
                    dsHoaDonChiTiet_viewModel_repo.get(i).setThanhTien(soLuongTongSua_tongKho * dsHoaDonChiTiet_viewModel_repo.get(i).getGiaBanGiam());

                    break;
                }
            }

            //        a = số lượng tổng sửa (3)
//        b = a + c ( tổng số lượng tổng sửa + số lượng trong kho ) 
//        c = số lượng tổng cả trong kho  
//        d = số lượng sửa mới (1)
        } else if (soLuongSuaMoi <= soLuongTongSua_tongKho || soLuongSuaMoi == 0) {

            for (int i = 0; i < dsDongHoChiTietREPO.size(); i++) {
                if (dsDongHoChiTietREPO.get(i).getIdCTDH() == maSPCT) {
                    int soLuongUpdateKhoHang = soLuongTongKho + (soLuongTongSua - soLuongSuaMoi);

                    dsDongHoChiTietREPO.get(i).setSoLuong(soLuongUpdateKhoHang);
                    break;
                }
            }

            for (int i = 0; i < dsHoaDonChiTiet_viewModel_repo.size(); i++) {
//                System.out.println("Chạy đến update số lượng sửa mới ");
                if (dsHoaDonChiTiet_viewModel_repo.get(i).getIdHoaDon() == maHoaDon && dsHoaDonChiTiet_viewModel_repo.get(i).getIdChiTietDH() == maSPCT) {
                    dsHoaDonChiTiet_viewModel_repo.get(i).setSoLuong(soLuongSuaMoi);
                    dsHoaDonChiTiet_viewModel_repo.get(i).setThanhTien(soLuongSuaMoi * dsHoaDonChiTiet_viewModel_repo.get(i).getGiaBanGiam());
                    break;
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Trong kho không đủ hàng cho bạn mua");
            return;
        }

        fillTableHoaDonChiTietSP(maHoaDon);
        fillTableSanPhamHoaDon();
    }

    private void lamMoiForm() {
        txt_tenKhachHang.setText("Khách hàng mới");
        txt_soDienThoai.setText("0");
        txt_tienKhachDua.setText("");
        lbl_tenKHTrenHoaDon.setText("Nguyễn Văn A");
        lbl_showMaHoaDon.setText("HD000");
        lbl_showTongTien.setText("0");
        lbl_showTienThua.setText("0");
    }

    private void timTenKHBySDT() {
        String sdtSearch = txt_soDienThoai.getText();
        if (sdtSearch.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Bạn cần nhập sdt để thực hiện tìm kiếm ");
            txt_soDienThoai.requestFocus();
        }

        String returnNameKH = khachHangService.timKiemKhachHangTheoSDTTraVeTenKH(sdtSearch);
        txt_tenKhachHang.setText(returnNameKH);

    }

    private void inHoaDon(int idHoaDon) {
        try {
            //  XSSFWorkbook đại diện cho 1 file excel 
            XSSFWorkbook wordbook = new XSSFWorkbook();

            XSSFSheet sheet = wordbook.createSheet("Danh sách sản phẩm");
            XSSFRow row = null;
            Cell cell = null;  // cell là các ô s

            row = sheet.createRow(3);  // tạo ra 3 hàng trống 

            cell = row.createCell(0, CellType.STRING);
            cell.setCellValue("STT");

            cell = row.createCell(1, CellType.STRING);
            cell.setCellValue("Mã hóa đơn");

            cell = row.createCell(2, CellType.STRING);
            cell.setCellValue("Mã sản phẩm");

            cell = row.createCell(3, CellType.STRING);
            cell.setCellValue("Số lượng");

            cell = row.createCell(4, CellType.STRING);
            cell.setCellValue("Thành tiền");

            for (int i = 0; i < dsHoaDonChiTiet_viewModel_repo.size(); i++) {
                if (dsHoaDonChiTiet_viewModel_repo.get(i).getIdHoaDon() == idHoaDon) {
                    row = sheet.createRow(4 + i);

                    cell = row.createCell(0, CellType.NUMERIC);
                    cell.setCellValue(i + 1);

                    cell = row.createCell(1, CellType.NUMERIC);
                    cell.setCellValue(dsHoaDonChiTiet_viewModel_repo.get(i).getIdHoaDon());

                    cell = row.createCell(2, CellType.NUMERIC);
                    cell.setCellValue(dsHoaDonChiTiet_viewModel_repo.get(i).getIdChiTietDH());

                    cell = row.createCell(3, CellType.NUMERIC);
                    cell.setCellValue(dsHoaDonChiTiet_viewModel_repo.get(i).getSoLuong());

                    cell = row.createCell(4, CellType.NUMERIC);
                    cell.setCellValue(dsHoaDonChiTiet_viewModel_repo.get(i).getThanhTien());
                }

                File f = new File("D://dsSanPhamTrongHoaDon.xlsx");
                try {
                    FileOutputStream fis = new FileOutputStream(f);
                    wordbook.write(fis);
                    fis.close();
                } catch (Exception e) {
                    System.out.println("Lỗi khi xuất thông tin ra file excel");
                    return;
                }

            }
        } catch (Exception e) {
            System.out.println("Lỗi khi thực hiện in file excel : " + e.getMessage());
            return;
        }

        JOptionPane.showMessageDialog(this, "In ra file excel thành công");
    }

    private void searchByEnterTenDH() {
        DefaultTableModel tableModel = new DefaultTableModel(this.columns, 0);
        tableModel.setRowCount(0);

        ArrayList<DongHoChiTietViewModel> ds_dhChiTiet = new ArrayList<>();
        ds_dhChiTiet.clear();

        String findTenDH = txt_timTheoTenDongHo.getText();

//        ds_dhChiTiet = dongHoChiTietService.locTheoTenDongHo(tenDH);
        for (viewmodel.ViewModel_H.DongHoChiTietViewModel x : dsDongHoChiTietREPO) {
            if (x.getSoLuong() > 0) {
                if (x.getTenDongHo().toLowerCase().contains(findTenDH.toLowerCase())) {
                    ds_dhChiTiet.add(x);
                }
            }
        }

        //{"Tên đồng hồ","Tính năng","Thời gian bảo hành","Giới tính", "Kiểu máy","Loại dây đeo"
        //,"Màu dây đeo","Số lượng","Giá bán","Chương trình KM","Giá sp sau KM"}
//        System.out.println("Size of ds đông hồ tim thấy" + ds_dhChiTiet.size());
        for (viewmodel.ViewModel_H.DongHoChiTietViewModel x : ds_dhChiTiet) {
            Object object[] = new Object[]{x.getIdCTDH(), x.getTenDongHo(), x.getTinhNang(), x.getThoiGianBH() + " tháng", x.getLoaiGioiTinh(),
                x.getLoaiKieuMay(), x.getLoaiDayDeo(), x.getMauDayDeo(), x.getSoLuong(), x.getGiaBan(), x.getChuongTrinhKM(),
                x.getGiaSauKM(), x.getTrangThaiDHCT()};
            tableModel.addRow(object);
        }

        tbl_showAllProduct.setModel(tableModel);
    }

    private void searchByMauSacDH() {
        
        ArrayList<DongHoChiTietViewModel> ds_dhChiTiet = new ArrayList<>();
        ds_dhChiTiet.clear();

        
        if(cbx_searchByMauSac.getSelectedItem()==null){
            return;
        }
        
        String mauSacLoc = cbx_searchByMauSac.getSelectedItem().toString();
//        System.out.println("Mau sac duoc chon" + mauSacLoc);
        
        DefaultTableModel tableModel = new DefaultTableModel(this.columns, 0);
        tableModel.setRowCount(0);

        
        tableModel.setRowCount(0);
        if (cbx_searchByMauSac.getSelectedItem().toString().isEmpty()) {
//            JOptionPane.showMessageDialog(this, "Chọn tên đồng hồ bạn muốn tìm kiếm");
            
            tableModel.setRowCount(0);
            tbl_showAllProduct.setModel(tableModel);
            return;
        }
        

//        ds_dhChiTiet = dongHoChiTietService.locTheoTenDongHo(tenDH);
        for (viewmodel.ViewModel_H.DongHoChiTietViewModel x : dsDongHoChiTietREPO) {
            if (x.getSoLuong() > 0) {
                if (x.getMauDayDeo().toLowerCase().contains(mauSacLoc.toLowerCase())) {
                    ds_dhChiTiet.add(x);
                }
            }
        }

        //{"Tên đồng hồ","Tính năng","Thời gian bảo hành","Giới tính", "Kiểu máy","Loại dây đeo"
        //,"Màu dây đeo","Số lượng","Giá bán","Chương trình KM","Giá sp sau KM"}
//        System.out.println("Size of ds đông hồ tim thấy" + ds_dhChiTiet.size());
        for (viewmodel.ViewModel_H.DongHoChiTietViewModel x : ds_dhChiTiet) {
            Object object[] = new Object[]{x.getIdCTDH(), x.getTenDongHo(), x.getTinhNang(), x.getThoiGianBH() + " tháng", x.getLoaiGioiTinh(),
                x.getLoaiKieuMay(), x.getLoaiDayDeo(), x.getMauDayDeo(), x.getSoLuong(), x.getGiaBan(), x.getChuongTrinhKM(),
                x.getGiaSauKM(), x.getTrangThaiDHCT()};
            tableModel.addRow(object);
        }

        tbl_showAllProduct.setModel(tableModel);
    }
    
    
    private void fillCombobox_MauSacQuaiDeo() {
        ArrayList<MauQuaiDeo> arr_mauSac = new ArrayList<>();
        arr_mauSac.clear();
        arr_mauSac = mauQuaiDeoService.layThongTinMauQuaiDeo();
        cbx_searchByMauSac.removeAllItems();
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        cbx_searchByMauSac.setModel(model);
        cbx_searchByMauSac.addItem("");
        for (MauQuaiDeo x : arr_mauSac) {
            cbx_searchByMauSac.addItem(x.getTenQuaiDeo());

        }
    }

    private void suaHoaDon() {
        int rowSelected = tbl_hoaDonCho.getSelectedRow();
        if(rowSelected<0){
            JOptionPane.showMessageDialog(this, "Chọn hóa đơn chờ bạn muốn sửa");
            return;
        }
        
        int idHoaDon = Integer.parseInt(tbl_hoaDonCho.getValueAt(rowSelected, 0).toString());
        
        if (txt_maNhanVien.getText().equalsIgnoreCase("")) {
            JOptionPane.showMessageDialog(this, "Bạn cần nhập chọn khách hàng, nhập mã nhân viên để sửa hóa đơn");
            return;
        }

        if (txt_maNhanVien.getText().equalsIgnoreCase("")) {
            JOptionPane.showMessageDialog(this, "Bạn cần nhập nhập mã nhân viên để sửa hóa đơn");
            return;
        }

        int idMaKH = this.getIDKhachHangBySDT();
        if (idMaKH == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn khách hàng để sửa hóa đơn");
            return;
        }

        int idNhanVien = Integer.parseInt(txt_maNhanVien.getText());

        HoaDon hoaDon = new HoaDon();
        hoaDon.setIdKhachHang(idMaKH);
        hoaDon.setIdNhanVien(idNhanVien);
        hoaDon.setIdHoaDon(idHoaDon);

        hoaDonService.capNhatThongTinHoaDonCho(hoaDon);
    }
}
