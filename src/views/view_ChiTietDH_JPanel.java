package views;

import java.awt.Color;
import views.viewThuocTinh.view_QLTrangThaiDongHoChiTiet;

import views.viewThuocTinh.view_QLGioiTinhDH;

import views.viewThuocTinh.view_QLMauDay;
import views.viewThuocTinh.view_QLTrangThaiDongHo;
import views.viewThuocTinh.view_QLKieuMay;

//import views.viewThuocTinh.view_QLKieuMay;
//
//import views.viewThuocTinh.view_QLMauDay;
//
//import views.viewThuocTinh.view_QLTrangThaiDongHo;
//
//import views.viewThuocTinh.view_QLTrangThaiDongHoChiTiet;
import java.util.ArrayList;
import java.util.Locale;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import models.model_H.ChatLieuDay;
import models.model_H.ChiTietDongHo;
import models.model_H.DongHo;
import models.model_H.GioiTinh;
import models.model_H.KhuyenMai;
import models.model_H.KieuMay;
import models.model_H.MauQuaiDeo;
import models.model_H.TrangThaiChiTietSanPham;
import repositorys.IRepo_H.ITrangThaiDongHoChiTietRepository;
import services.imp.ImpSV_H.ChatLieuDayService;
import services.imp.ImpSV_H.ChiTietDongHoService;
import services.imp.ImpSV_H.DongHoService;
import services.imp.ImpSV_H.GioiTinhService;
import services.ISV_H.IChatLieuDayService;
import services.ISV_H.IDongHoChiTietService;
import services.ISV_H.IDongHoService;
import services.ISV_H.IGioiTinhService;
import services.ISV_H.IKieuMayService;
import services.imp.ImpSV_H.KhuyenMaiService;
import services.imp.ImpSV_H.KieuMayService;
import services.imp.ImpSV_H.MauQuaiDeoService;
import services.imp.ImpSV_H.TrangThaiDHChiTietService;
import services.imp.ImpSV_H.TrangThaiDH_Service;
import services.ISV_H.IKhuyenMaiService;
import services.ISV_H.ITrangThaiDongHoService;
import viewmodel.ViewModel_H.DongHoChiTietViewModel;
import services.ISV_H.ITrangThaiDHChiTietService;
import services.ISV_H.IMauQuaiDeoService;

/**
 *
 * @author Admin
 */
public class view_ChiTietDH_JPanel extends javax.swing.JPanel {

    IGioiTinhService gioiTinhService = new GioiTinhService();
    IKieuMayService kieuMayService = new KieuMayService();
    IChatLieuDayService chatLieuDayService = new ChatLieuDayService();
    IKhuyenMaiService khuyenMaiService = new KhuyenMaiService();
    ITrangThaiDHChiTietService trangThaiDHCTService = new TrangThaiDHChiTietService();
    IDongHoService dongHoService = new DongHoService();
    ITrangThaiDongHoService trangThaiDHService = new TrangThaiDH_Service();
    IMauQuaiDeoService mauQuaiDeoService = new MauQuaiDeoService();
    IDongHoChiTietService chiTietDHService = new ChiTietDongHoService();

    public int idDongHo = 0;
    public int soLuongHienTaiDH = 0;

    private ArrayList<DongHoChiTietViewModel> ds_dhChiTiet = new ArrayList<>();
    private ArrayList<GioiTinh> ds_gioiTinh = new ArrayList<>();
    private ArrayList<KieuMay> ds_kieuMay = new ArrayList<>();
    private ArrayList<ChatLieuDay> ds_chatLieuDay = new ArrayList<>();
    private ArrayList<MauQuaiDeo> ds_mauQuaiDeo = new ArrayList<>();
    private ArrayList<TrangThaiChiTietSanPham> ds_chiTietStatusSP = new ArrayList<>();
    private ArrayList<KhuyenMai> ds_khuyenMai = new ArrayList<>();
    private ArrayList<DongHo> ds_dongHo = new ArrayList<>();

    /**
     * Creates new form view_ChiTietDH
     */
    public view_ChiTietDH_JPanel() {
        initComponents();

//        chiTietDHService.capNhatTrangThaiDongHo();
        txt_maCTDH.setEditable(false);
        txt_maCTDH.setBackground(Color.LIGHT_GRAY);
        cbx_trangThai.setEditable(false);
        cbx_chuongTrinhKM.setEditable(false);

//        txt_maSPCT.setEditable(false);
//        txt_maSPPhanBiet.setEditable(false);
//        cbx_chuongTrinhKM.setEditable(false);  -- chua su dung duoc
        
        fillComboboxGioiTinh();
        fillCombobox_KieuMay();
        fillCombobox_ChatLieuDay();
        fillCombobox_KhuyenMai();
        fillCombobox_TrangThaiChiTietSP();
        fillCombobox_MauSacQuaiDeo();
        fillCombobox_MauSacQuaiDeo_deLoc();
        fillCombobox_timTheoTenDongHo();
        fillCombobox_khoangGia();

        fillTableDanhSachDongHo();
        fill_dataTo_tbl_showThongTinDHChiTiet();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        pn_chiTietDH = new javax.swing.JPanel();
        pn_thongTinChiTietDongHo = new javax.swing.JPanel();
        lbl_maCTDH = new javax.swing.JLabel();
        lbl_kieuMay = new javax.swing.JLabel();
        lbl_gioiTinh = new javax.swing.JLabel();
        lbl_tenDongHo = new javax.swing.JLabel();
        lbl_loaiDayDeo = new javax.swing.JLabel();
        lbl_mauVo = new javax.swing.JLabel();
        txt_maCTDH = new javax.swing.JTextField();
        txt_tenDongHo = new javax.swing.JTextField();
        lbl_giaNhap = new javax.swing.JLabel();
        txt_giaNhap = new javax.swing.JTextField();
        lbl_giaBan = new javax.swing.JLabel();
        lbl_CTKhuyenMai = new javax.swing.JLabel();
        lbl_trangThai = new javax.swing.JLabel();
        txt_giaBan = new javax.swing.JTextField();
        cbx_gioiTinh = new javax.swing.JComboBox<>();
        cbx_kieuMay = new javax.swing.JComboBox<>();
        cbx_loaiDayDeo = new javax.swing.JComboBox<>();
        cbx_mauVo = new javax.swing.JComboBox<>();
        cbx_trangThai = new javax.swing.JComboBox<>();
        cbx_chuongTrinhKM = new javax.swing.JComboBox<>();
        pn_chucNang = new javax.swing.JPanel();
        btn_xoaDHCT = new javax.swing.JButton();
        btn_suaDHCT = new javax.swing.JButton();
        btn_themDHCT = new javax.swing.JButton();
        lbl_soLuong = new javax.swing.JLabel();
        txt_soLuong = new javax.swing.JTextField();
        pn_danhSachDongHo_ = new javax.swing.JPanel();
        btn_themDongHo = new javax.swing.JButton();
        btn_capNhatTTDongHo = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_showThongTinDH = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        pn_danhSachDongHoCT = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tbl_showThongTinDHChiTiet = new javax.swing.JTable();
        lbl_tenDHDeLoc = new javax.swing.JLabel();
        cbx_tenDongHo_deLoc = new javax.swing.JComboBox<>();
        lbl_locTheoKhoangGia = new javax.swing.JLabel();
        txt_locTheoKhoangGia = new javax.swing.JTextField();
        btn_locTheoKhoangGia = new javax.swing.JButton();
        cbx_hinhThucLocKhoangGia = new javax.swing.JComboBox<>();
        lbl_mauQuaiDeo = new javax.swing.JLabel();
        cbx_mauQuaiDeoLoc = new javax.swing.JComboBox<>();
        pn_thuocTinhSP = new javax.swing.JPanel();
        pn_thuocTinhSanPham = new javax.swing.JPanel();
        btn_gioiTinh = new javax.swing.JButton();
        btn_trangThaiDongHo = new javax.swing.JButton();
        btn_mauDay = new javax.swing.JButton();
        btn_trangThaiDongHoChiTiet = new javax.swing.JButton();
        btn_kieuMay = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTabbedPane1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N

        pn_chiTietDH.setBackground(new java.awt.Color(255, 255, 255));

        pn_thongTinChiTietDongHo.setBackground(new java.awt.Color(51, 204, 255));
        pn_thongTinChiTietDongHo.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin chi tiết đồng hồ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 18))); // NOI18N
        pn_thongTinChiTietDongHo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pn_thongTinChiTietDongHoMouseClicked(evt);
            }
        });

        lbl_maCTDH.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lbl_maCTDH.setText("Mã chi tiết đh");

        lbl_kieuMay.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lbl_kieuMay.setText("Kiểu máy");

        lbl_gioiTinh.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lbl_gioiTinh.setText("Giới tính");

        lbl_tenDongHo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lbl_tenDongHo.setText("Tên đồng hồ");

        lbl_loaiDayDeo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lbl_loaiDayDeo.setText("Loại dây đeo");

        lbl_mauVo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lbl_mauVo.setText("Màu vỏ");

        txt_maCTDH.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txt_maCTDH.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt_maCTDHMouseClicked(evt);
            }
        });
        txt_maCTDH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_maCTDHActionPerformed(evt);
            }
        });

        txt_tenDongHo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        lbl_giaNhap.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lbl_giaNhap.setText("Giá nhập");

        txt_giaNhap.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        lbl_giaBan.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lbl_giaBan.setText("Giá bán");

        lbl_CTKhuyenMai.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lbl_CTKhuyenMai.setText("CT khuyến mãi");

        lbl_trangThai.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lbl_trangThai.setText("Trạng thái");

        txt_giaBan.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        cbx_gioiTinh.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cbx_gioiTinh.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cbx_kieuMay.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cbx_kieuMay.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cbx_loaiDayDeo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cbx_loaiDayDeo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cbx_mauVo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cbx_mauVo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cbx_trangThai.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cbx_trangThai.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbx_trangThai.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cbx_trangThaiMouseClicked(evt);
            }
        });

        cbx_chuongTrinhKM.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cbx_chuongTrinhKM.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbx_chuongTrinhKM.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cbx_chuongTrinhKMMouseClicked(evt);
            }
        });

        pn_chucNang.setBackground(new java.awt.Color(255, 255, 255));
        pn_chucNang.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Chức năng", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N

        btn_xoaDHCT.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn_xoaDHCT.setText("Xóa đồng hồ CT");
        btn_xoaDHCT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_xoaDHCTActionPerformed(evt);
            }
        });

        btn_suaDHCT.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn_suaDHCT.setText("Sửa đồng hồ CT");
        btn_suaDHCT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_suaDHCTActionPerformed(evt);
            }
        });

        btn_themDHCT.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn_themDHCT.setText("Thêm đồng hồ CT");
        btn_themDHCT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_themDHCTActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pn_chucNangLayout = new javax.swing.GroupLayout(pn_chucNang);
        pn_chucNang.setLayout(pn_chucNangLayout);
        pn_chucNangLayout.setHorizontalGroup(
            pn_chucNangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn_chucNangLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(btn_themDHCT)
                .addGap(18, 18, 18)
                .addComponent(btn_suaDHCT)
                .addGap(18, 18, 18)
                .addComponent(btn_xoaDHCT, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pn_chucNangLayout.setVerticalGroup(
            pn_chucNangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn_chucNangLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pn_chucNangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_themDHCT)
                    .addComponent(btn_suaDHCT)
                    .addComponent(btn_xoaDHCT))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        lbl_soLuong.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lbl_soLuong.setText("Số lượng");

        txt_soLuong.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        javax.swing.GroupLayout pn_thongTinChiTietDongHoLayout = new javax.swing.GroupLayout(pn_thongTinChiTietDongHo);
        pn_thongTinChiTietDongHo.setLayout(pn_thongTinChiTietDongHoLayout);
        pn_thongTinChiTietDongHoLayout.setHorizontalGroup(
            pn_thongTinChiTietDongHoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn_thongTinChiTietDongHoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pn_thongTinChiTietDongHoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pn_thongTinChiTietDongHoLayout.createSequentialGroup()
                        .addComponent(lbl_CTKhuyenMai)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbx_chuongTrinhKM, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(pn_thongTinChiTietDongHoLayout.createSequentialGroup()
                        .addGroup(pn_thongTinChiTietDongHoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(pn_chucNang, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pn_thongTinChiTietDongHoLayout.createSequentialGroup()
                                .addGroup(pn_thongTinChiTietDongHoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pn_thongTinChiTietDongHoLayout.createSequentialGroup()
                                        .addComponent(lbl_tenDongHo)
                                        .addGap(21, 21, 21)
                                        .addComponent(txt_tenDongHo, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(pn_thongTinChiTietDongHoLayout.createSequentialGroup()
                                        .addGroup(pn_thongTinChiTietDongHoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lbl_maCTDH)
                                            .addComponent(lbl_kieuMay))
                                        .addGroup(pn_thongTinChiTietDongHoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(pn_thongTinChiTietDongHoLayout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(txt_maCTDH, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(pn_thongTinChiTietDongHoLayout.createSequentialGroup()
                                                .addGap(12, 12, 12)
                                                .addComponent(cbx_kieuMay, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addComponent(lbl_gioiTinh)
                                    .addComponent(lbl_loaiDayDeo)
                                    .addGroup(pn_thongTinChiTietDongHoLayout.createSequentialGroup()
                                        .addGap(97, 97, 97)
                                        .addGroup(pn_thongTinChiTietDongHoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(cbx_gioiTinh, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(cbx_loaiDayDeo, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(41, 41, 41)
                                .addGroup(pn_thongTinChiTietDongHoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pn_thongTinChiTietDongHoLayout.createSequentialGroup()
                                        .addComponent(lbl_trangThai)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cbx_trangThai, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(pn_thongTinChiTietDongHoLayout.createSequentialGroup()
                                        .addComponent(lbl_giaBan)
                                        .addGap(18, 18, 18)
                                        .addComponent(txt_giaBan, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(pn_thongTinChiTietDongHoLayout.createSequentialGroup()
                                        .addComponent(lbl_giaNhap)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txt_giaNhap, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(pn_thongTinChiTietDongHoLayout.createSequentialGroup()
                                        .addComponent(lbl_soLuong)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txt_soLuong, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(pn_thongTinChiTietDongHoLayout.createSequentialGroup()
                                        .addComponent(lbl_mauVo, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(cbx_mauVo, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        pn_thongTinChiTietDongHoLayout.setVerticalGroup(
            pn_thongTinChiTietDongHoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn_thongTinChiTietDongHoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pn_thongTinChiTietDongHoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pn_thongTinChiTietDongHoLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(lbl_tenDongHo))
                    .addGroup(pn_thongTinChiTietDongHoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txt_tenDongHo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cbx_mauVo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lbl_mauVo)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pn_thongTinChiTietDongHoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_maCTDH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pn_thongTinChiTietDongHoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lbl_maCTDH)
                        .addComponent(lbl_soLuong)
                        .addComponent(txt_soLuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pn_thongTinChiTietDongHoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_gioiTinh)
                    .addComponent(cbx_gioiTinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_giaNhap)
                    .addComponent(txt_giaNhap, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pn_thongTinChiTietDongHoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_kieuMay)
                    .addComponent(cbx_kieuMay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_giaBan)
                    .addComponent(txt_giaBan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pn_thongTinChiTietDongHoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_loaiDayDeo)
                    .addComponent(cbx_loaiDayDeo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_trangThai)
                    .addComponent(cbx_trangThai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pn_thongTinChiTietDongHoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbx_chuongTrinhKM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_CTKhuyenMai))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pn_chucNang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pn_danhSachDongHo_.setBackground(new java.awt.Color(0, 204, 255));
        pn_danhSachDongHo_.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin đồng hồ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 18))); // NOI18N

        btn_themDongHo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn_themDongHo.setText("Thêm đồng hồ");
        btn_themDongHo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_themDongHoActionPerformed(evt);
            }
        });

        btn_capNhatTTDongHo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn_capNhatTTDongHo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/refresh.png"))); // NOI18N
        btn_capNhatTTDongHo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_capNhatTTDongHoActionPerformed(evt);
            }
        });

        tbl_showThongTinDH.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tbl_showThongTinDH.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã đồng hồ", "Tên đồng hồ", "Xuất xứ", "Thương hiệu", "NSX", "Chất liệu mặt số", "Đường kính mặt số", "Bề dày mặt số", "Trạng thái"
            }
        ));
        tbl_showThongTinDH.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_showThongTinDHMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_showThongTinDH);

        jButton1.setText("Clear form");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pn_danhSachDongHo_Layout = new javax.swing.GroupLayout(pn_danhSachDongHo_);
        pn_danhSachDongHo_.setLayout(pn_danhSachDongHo_Layout);
        pn_danhSachDongHo_Layout.setHorizontalGroup(
            pn_danhSachDongHo_Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn_danhSachDongHo_Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 503, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 6, Short.MAX_VALUE))
            .addGroup(pn_danhSachDongHo_Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(btn_themDongHo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_capNhatTTDongHo)
                .addContainerGap())
        );
        pn_danhSachDongHo_Layout.setVerticalGroup(
            pn_danhSachDongHo_Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn_danhSachDongHo_Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pn_danhSachDongHo_Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btn_capNhatTTDongHo)
                    .addGroup(pn_danhSachDongHo_Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btn_themDongHo)
                        .addComponent(jButton1)))
                .addContainerGap())
        );

        pn_danhSachDongHoCT.setBackground(new java.awt.Color(0, 204, 255));
        pn_danhSachDongHoCT.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Danh sách đồng hồ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 18))); // NOI18N

        tbl_showThongTinDHChiTiet.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tbl_showThongTinDHChiTiet.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã đồng hồ", "Tên đồng hồ", "Xuất xứ", "Thương hiệu", "NSX", "Chất liệu mặt số", "Đường kính mặt số", "Bề dày mặt số", "Trạng thái"
            }
        ));
        tbl_showThongTinDHChiTiet.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_showThongTinDHChiTietMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tbl_showThongTinDHChiTiet);

        lbl_tenDHDeLoc.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lbl_tenDHDeLoc.setText("Tên đồng hồ");

        cbx_tenDongHo_deLoc.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cbx_tenDongHo_deLoc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbx_tenDongHo_deLoc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cbx_tenDongHo_deLocMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                cbx_tenDongHo_deLocMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                cbx_tenDongHo_deLocMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                cbx_tenDongHo_deLocMouseReleased(evt);
            }
        });
        cbx_tenDongHo_deLoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbx_tenDongHo_deLocActionPerformed(evt);
            }
        });
        cbx_tenDongHo_deLoc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cbx_tenDongHo_deLocKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cbx_tenDongHo_deLocKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cbx_tenDongHo_deLocKeyTyped(evt);
            }
        });

        lbl_locTheoKhoangGia.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lbl_locTheoKhoangGia.setText("Lọc theo mức giá");

        txt_locTheoKhoangGia.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        btn_locTheoKhoangGia.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn_locTheoKhoangGia.setText("Lọc");
        btn_locTheoKhoangGia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_locTheoKhoangGiaActionPerformed(evt);
            }
        });

        cbx_hinhThucLocKhoangGia.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        cbx_hinhThucLocKhoangGia.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbx_hinhThucLocKhoangGia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbx_hinhThucLocKhoangGiaActionPerformed(evt);
            }
        });

        lbl_mauQuaiDeo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lbl_mauQuaiDeo.setText("Màu quai đeo");

        cbx_mauQuaiDeoLoc.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cbx_mauQuaiDeoLoc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbx_mauQuaiDeoLoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbx_mauQuaiDeoLocActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pn_danhSachDongHoCTLayout = new javax.swing.GroupLayout(pn_danhSachDongHoCT);
        pn_danhSachDongHoCT.setLayout(pn_danhSachDongHoCTLayout);
        pn_danhSachDongHoCTLayout.setHorizontalGroup(
            pn_danhSachDongHoCTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn_danhSachDongHoCTLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pn_danhSachDongHoCTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 1105, Short.MAX_VALUE)
                    .addGroup(pn_danhSachDongHoCTLayout.createSequentialGroup()
                        .addComponent(lbl_tenDHDeLoc)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbx_tenDongHo_deLoc, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(113, 113, 113)
                        .addComponent(lbl_locTheoKhoangGia)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_locTheoKhoangGia, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbx_hinhThucLocKhoangGia, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_locTheoKhoangGia)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lbl_mauQuaiDeo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbx_mauQuaiDeoLoc, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44))))
        );
        pn_danhSachDongHoCTLayout.setVerticalGroup(
            pn_danhSachDongHoCTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pn_danhSachDongHoCTLayout.createSequentialGroup()
                .addGroup(pn_danhSachDongHoCTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_tenDHDeLoc)
                    .addComponent(cbx_tenDongHo_deLoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_locTheoKhoangGia)
                    .addComponent(txt_locTheoKhoangGia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbx_hinhThucLocKhoangGia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_mauQuaiDeo)
                    .addComponent(cbx_mauQuaiDeoLoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_locTheoKhoangGia))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pn_chiTietDHLayout = new javax.swing.GroupLayout(pn_chiTietDH);
        pn_chiTietDH.setLayout(pn_chiTietDHLayout);
        pn_chiTietDHLayout.setHorizontalGroup(
            pn_chiTietDHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn_chiTietDHLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pn_chiTietDHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pn_danhSachDongHoCT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pn_chiTietDHLayout.createSequentialGroup()
                        .addComponent(pn_danhSachDongHo_, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pn_thongTinChiTietDongHo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(105, Short.MAX_VALUE))
        );
        pn_chiTietDHLayout.setVerticalGroup(
            pn_chiTietDHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn_chiTietDHLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pn_chiTietDHLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pn_thongTinChiTietDongHo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pn_danhSachDongHo_, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pn_danhSachDongHoCT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(119, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Quản lý chi tiết đồng hồ", pn_chiTietDH);

        pn_thuocTinhSP.setBackground(new java.awt.Color(255, 255, 255));

        pn_thuocTinhSanPham.setBackground(new java.awt.Color(0, 204, 255));
        pn_thuocTinhSanPham.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thuộc tính sản phẩm", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 18))); // NOI18N

        btn_gioiTinh.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btn_gioiTinh.setText("Giới tính");
        btn_gioiTinh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_gioiTinhActionPerformed(evt);
            }
        });

        btn_trangThaiDongHo.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btn_trangThaiDongHo.setText("Trạng thái đồng hồ");
        btn_trangThaiDongHo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_trangThaiDongHoActionPerformed(evt);
            }
        });

        btn_mauDay.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btn_mauDay.setText("Màu dây");
        btn_mauDay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_mauDayActionPerformed(evt);
            }
        });

        btn_trangThaiDongHoChiTiet.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btn_trangThaiDongHoChiTiet.setText("Trạng thái đồng hồ chi tiết");
        btn_trangThaiDongHoChiTiet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_trangThaiDongHoChiTietActionPerformed(evt);
            }
        });

        btn_kieuMay.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btn_kieuMay.setText("Kiểu máy");
        btn_kieuMay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_kieuMayActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pn_thuocTinhSanPhamLayout = new javax.swing.GroupLayout(pn_thuocTinhSanPham);
        pn_thuocTinhSanPham.setLayout(pn_thuocTinhSanPhamLayout);
        pn_thuocTinhSanPhamLayout.setHorizontalGroup(
            pn_thuocTinhSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn_thuocTinhSanPhamLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(pn_thuocTinhSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btn_gioiTinh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_trangThaiDongHo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(52, 52, 52)
                .addGroup(pn_thuocTinhSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btn_trangThaiDongHoChiTiet, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_kieuMay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(41, 41, 41)
                .addComponent(btn_mauDay, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(453, Short.MAX_VALUE))
        );
        pn_thuocTinhSanPhamLayout.setVerticalGroup(
            pn_thuocTinhSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn_thuocTinhSanPhamLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(pn_thuocTinhSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_gioiTinh)
                    .addComponent(btn_kieuMay)
                    .addComponent(btn_mauDay))
                .addGap(18, 18, 18)
                .addGroup(pn_thuocTinhSanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_trangThaiDongHo)
                    .addComponent(btn_trangThaiDongHoChiTiet))
                .addContainerGap(430, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pn_thuocTinhSPLayout = new javax.swing.GroupLayout(pn_thuocTinhSP);
        pn_thuocTinhSP.setLayout(pn_thuocTinhSPLayout);
        pn_thuocTinhSPLayout.setHorizontalGroup(
            pn_thuocTinhSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn_thuocTinhSPLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pn_thuocTinhSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(78, Short.MAX_VALUE))
        );
        pn_thuocTinhSPLayout.setVerticalGroup(
            pn_thuocTinhSPLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn_thuocTinhSPLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pn_thuocTinhSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(95, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Thuộc tính đồng hồ", pn_thuocTinhSP);

        jScrollPane2.setViewportView(jTabbedPane1);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1150, 700));
    }// </editor-fold>//GEN-END:initComponents

    private void btn_xoaDHCTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_xoaDHCTActionPerformed
        xoa1ChiTietDongHo();
        fill_dataTo_tbl_showThongTinDHChiTiet();
    }//GEN-LAST:event_btn_xoaDHCTActionPerformed

    private void btn_suaDHCTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_suaDHCTActionPerformed
        suaDongHoChiTiet();
        fill_dataTo_tbl_showThongTinDHChiTiet();
    }//GEN-LAST:event_btn_suaDHCTActionPerformed

    private void btn_themDHCTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_themDHCTActionPerformed
        them1ChiTietDongHo();
        fill_dataTo_tbl_showThongTinDHChiTiet();
    }//GEN-LAST:event_btn_themDHCTActionPerformed

    private void pn_thongTinChiTietDongHoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pn_thongTinChiTietDongHoMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_pn_thongTinChiTietDongHoMouseClicked

    private void btn_themDongHoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_themDongHoActionPerformed
        view_DongHo_ view = new view_DongHo_();
        view.setVisible(true);
    }//GEN-LAST:event_btn_themDongHoActionPerformed

    private void btn_capNhatTTDongHoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_capNhatTTDongHoActionPerformed
//        chiTietDHService.capNhatTrangThaiDongHo();
        fillTableDanhSachDongHo();
        fillComboboxGioiTinh();
        fillCombobox_KieuMay();
        fillCombobox_ChatLieuDay();
        fillCombobox_KhuyenMai();
        fillCombobox_TrangThaiChiTietSP();
        fillCombobox_MauSacQuaiDeo();
        fillCombobox_MauSacQuaiDeo_deLoc();
        fillCombobox_timTheoTenDongHo();
        fillCombobox_khoangGia();
        fill_dataTo_tbl_showThongTinDHChiTiet();
        this.clearForm();
    }//GEN-LAST:event_btn_capNhatTTDongHoActionPerformed

    private void tbl_showThongTinDHMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_showThongTinDHMouseClicked
        clickShowDataBangDongHo();
    }//GEN-LAST:event_tbl_showThongTinDHMouseClicked

    private void tbl_showThongTinDHChiTietMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_showThongTinDHChiTietMouseClicked
        clickShowDataBangDongHoChiTiet();
    }//GEN-LAST:event_tbl_showThongTinDHChiTietMouseClicked

    private void btn_locTheoKhoangGiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_locTheoKhoangGiaActionPerformed
        locTheoKhoangGia();
    }//GEN-LAST:event_btn_locTheoKhoangGiaActionPerformed

    private void btn_gioiTinhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_gioiTinhActionPerformed
        view_QLGioiTinhDH gioiTinh = new view_QLGioiTinhDH();
        gioiTinh.setVisible(true);
    }//GEN-LAST:event_btn_gioiTinhActionPerformed

    private void btn_trangThaiDongHoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_trangThaiDongHoActionPerformed
        view_QLTrangThaiDongHo view = new view_QLTrangThaiDongHo();
        view.setVisible(true);
    }//GEN-LAST:event_btn_trangThaiDongHoActionPerformed

    private void btn_mauDayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_mauDayActionPerformed
        view_QLMauDay view = new view_QLMauDay();
        view.setVisible(true);
    }//GEN-LAST:event_btn_mauDayActionPerformed

    private void btn_trangThaiDongHoChiTietActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_trangThaiDongHoChiTietActionPerformed
        view_QLTrangThaiDongHoChiTiet view = new view_QLTrangThaiDongHoChiTiet();
        view.setVisible(true);
    }//GEN-LAST:event_btn_trangThaiDongHoChiTietActionPerformed

    private void btn_kieuMayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_kieuMayActionPerformed
        view_QLKieuMay view = new view_QLKieuMay();
        view.setVisible(true);
    }//GEN-LAST:event_btn_kieuMayActionPerformed

    private void txt_maCTDHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_maCTDHActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_maCTDHActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.clearForm();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txt_maCTDHMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt_maCTDHMouseClicked

        JOptionPane.showMessageDialog(this, "mã chi tiết đồng hồ chỉ để xem");
    }//GEN-LAST:event_txt_maCTDHMouseClicked

    private void cbx_trangThaiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbx_trangThaiMouseClicked
        JOptionPane.showMessageDialog(this, "Trạng thái chi tiết đồng hồ chỉ để xem");
    }//GEN-LAST:event_cbx_trangThaiMouseClicked

    private void cbx_chuongTrinhKMMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbx_chuongTrinhKMMouseClicked
        JOptionPane.showMessageDialog(this, "Chương trình khuyến mãi áp dụng cho đồng hồ chỉ để xem");
    }//GEN-LAST:event_cbx_chuongTrinhKMMouseClicked

    private void cbx_tenDongHo_deLocKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cbx_tenDongHo_deLocKeyTyped

    }//GEN-LAST:event_cbx_tenDongHo_deLocKeyTyped

    private void cbx_tenDongHo_deLocKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cbx_tenDongHo_deLocKeyReleased

    }//GEN-LAST:event_cbx_tenDongHo_deLocKeyReleased

    private void cbx_tenDongHo_deLocKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cbx_tenDongHo_deLocKeyPressed

    }//GEN-LAST:event_cbx_tenDongHo_deLocKeyPressed

    private void cbx_tenDongHo_deLocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbx_tenDongHo_deLocActionPerformed
        comboboxAfterClick();
    }//GEN-LAST:event_cbx_tenDongHo_deLocActionPerformed

    private void cbx_tenDongHo_deLocMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbx_tenDongHo_deLocMouseClicked

    }//GEN-LAST:event_cbx_tenDongHo_deLocMouseClicked

    private void cbx_tenDongHo_deLocMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbx_tenDongHo_deLocMouseReleased

    }//GEN-LAST:event_cbx_tenDongHo_deLocMouseReleased

    private void cbx_tenDongHo_deLocMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbx_tenDongHo_deLocMousePressed

    }//GEN-LAST:event_cbx_tenDongHo_deLocMousePressed

    private void cbx_tenDongHo_deLocMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbx_tenDongHo_deLocMouseExited

    }//GEN-LAST:event_cbx_tenDongHo_deLocMouseExited

    private void cbx_mauQuaiDeoLocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbx_mauQuaiDeoLocActionPerformed
        clickCombobox_SearchData_mauQuaiDeo();
    }//GEN-LAST:event_cbx_mauQuaiDeoLocActionPerformed

    private void cbx_hinhThucLocKhoangGiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbx_hinhThucLocKhoangGiaActionPerformed
//        clickLoaiMucGia_searchData_mucGia();
    }//GEN-LAST:event_cbx_hinhThucLocKhoangGiaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_capNhatTTDongHo;
    private javax.swing.JButton btn_gioiTinh;
    private javax.swing.JButton btn_kieuMay;
    private javax.swing.JButton btn_locTheoKhoangGia;
    private javax.swing.JButton btn_mauDay;
    private javax.swing.JButton btn_suaDHCT;
    private javax.swing.JButton btn_themDHCT;
    private javax.swing.JButton btn_themDongHo;
    private javax.swing.JButton btn_trangThaiDongHo;
    private javax.swing.JButton btn_trangThaiDongHoChiTiet;
    private javax.swing.JButton btn_xoaDHCT;
    private javax.swing.JComboBox<String> cbx_chuongTrinhKM;
    private javax.swing.JComboBox<String> cbx_gioiTinh;
    private javax.swing.JComboBox<String> cbx_hinhThucLocKhoangGia;
    private javax.swing.JComboBox<String> cbx_kieuMay;
    private javax.swing.JComboBox<String> cbx_loaiDayDeo;
    private javax.swing.JComboBox<String> cbx_mauQuaiDeoLoc;
    private javax.swing.JComboBox<String> cbx_mauVo;
    private javax.swing.JComboBox<String> cbx_tenDongHo_deLoc;
    private javax.swing.JComboBox<String> cbx_trangThai;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lbl_CTKhuyenMai;
    private javax.swing.JLabel lbl_giaBan;
    private javax.swing.JLabel lbl_giaNhap;
    private javax.swing.JLabel lbl_gioiTinh;
    private javax.swing.JLabel lbl_kieuMay;
    private javax.swing.JLabel lbl_loaiDayDeo;
    private javax.swing.JLabel lbl_locTheoKhoangGia;
    private javax.swing.JLabel lbl_maCTDH;
    private javax.swing.JLabel lbl_mauQuaiDeo;
    private javax.swing.JLabel lbl_mauVo;
    private javax.swing.JLabel lbl_soLuong;
    private javax.swing.JLabel lbl_tenDHDeLoc;
    private javax.swing.JLabel lbl_tenDongHo;
    private javax.swing.JLabel lbl_trangThai;
    private javax.swing.JPanel pn_chiTietDH;
    private javax.swing.JPanel pn_chucNang;
    private javax.swing.JPanel pn_danhSachDongHoCT;
    private javax.swing.JPanel pn_danhSachDongHo_;
    private javax.swing.JPanel pn_thongTinChiTietDongHo;
    private javax.swing.JPanel pn_thuocTinhSP;
    private javax.swing.JPanel pn_thuocTinhSanPham;
    private javax.swing.JTable tbl_showThongTinDH;
    private javax.swing.JTable tbl_showThongTinDHChiTiet;
    private javax.swing.JTextField txt_giaBan;
    private javax.swing.JTextField txt_giaNhap;
    private javax.swing.JTextField txt_locTheoKhoangGia;
    private javax.swing.JTextField txt_maCTDH;
    private javax.swing.JTextField txt_soLuong;
    private javax.swing.JTextField txt_tenDongHo;
    // End of variables declaration//GEN-END:variables
private void fillTableDanhSachDongHo() {
        ArrayList<DongHo> ds_dongHo = new ArrayList<>();
        ds_dongHo.clear();
        ds_dongHo = dongHoService.layThongTinDH();
        //tenDongHo, thuongHieu, xuatXu, noiSanXuat, chatLieuMatSo, duongKinhMatSo, beDayMatSo, idTrangThaiDH
        String columns[] = {"Mã đồng hồ", "Tên đồng hồ", "Thương hiệu", "Xuất xứ", "NSX", "Chất liệu", "Tính năng", "Thời gian BH", "Trạng thái"};
        DefaultTableModel tableModel = new DefaultTableModel(columns, 0);
        tableModel.setRowCount(0);

        for (DongHo x : ds_dongHo) {
            int idTrangThai = x.getIdTrangThaiDH();
            String trangThai = this.trangThaiDHService.layTrangThaiBangID(idTrangThai);
            Object objects[] = new Object[]{x.getId(), x.getTen(), x.getThuongHieu(), x.getXuatXu(),
                x.getNoiSanXuat(), x.getChatLieuMatSo(),
                x.getTinhNang(), x.getThoiGianBH(), trangThai};
            tableModel.addRow(objects);
        }
        tbl_showThongTinDH.setModel(tableModel);
    }

    private void fillComboboxGioiTinh() {
        ArrayList<GioiTinh> arr_gioiTinh = new ArrayList<>();
        arr_gioiTinh.clear();
        arr_gioiTinh = gioiTinhService.layThongTinGT();
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        model.removeAllElements();
        cbx_gioiTinh.setModel(model);
        cbx_gioiTinh.addItem("");
        for (GioiTinh x : arr_gioiTinh) {
            cbx_gioiTinh.addItem(x.getTen());
        }
    }

    private void fillCombobox_KieuMay() {
        ArrayList<KieuMay> arr_kieuMay = new ArrayList<>();
        arr_kieuMay.clear();
        arr_kieuMay = kieuMayService.layThongTinKieuMay();
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        model.removeAllElements();
        cbx_kieuMay.setModel(model);
        cbx_kieuMay.addItem("");
        for (KieuMay x : arr_kieuMay) {
            cbx_kieuMay.addItem(x.getTen());
        }
    }

    private void fillCombobox_ChatLieuDay() {
        ArrayList<ChatLieuDay> arr_chatLieuDay = new ArrayList<>();
        arr_chatLieuDay.clear();
        arr_chatLieuDay = chatLieuDayService.layThongTinCLD();
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        model.removeAllElements();
        cbx_loaiDayDeo.setModel(model);
        cbx_loaiDayDeo.addItem("");
        for (ChatLieuDay x : arr_chatLieuDay) {
            cbx_loaiDayDeo.addItem(x.getTen());
        }
    }

    private void fillCombobox_KhuyenMai() {
        ArrayList<KhuyenMai> arr_khuyenMai = new ArrayList<>();
        arr_khuyenMai.clear();
        arr_khuyenMai = khuyenMaiService.layThongTinKM();
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        model.removeAllElements();
        cbx_chuongTrinhKM.setModel(model);
        for (KhuyenMai x : arr_khuyenMai) {
            cbx_chuongTrinhKM.addItem(x.getTen());
        }
    }

    private void fillCombobox_TrangThaiChiTietSP() {
        ArrayList<TrangThaiChiTietSanPham> arr_trangThai = new ArrayList<>();
        arr_trangThai.clear();
        arr_trangThai = trangThaiDHCTService.layThongTinGT();
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        model.removeAllElements();
        cbx_trangThai.setModel(model);
        for (TrangThaiChiTietSanPham x : arr_trangThai) {
            cbx_trangThai.addItem(x.getTrangThai());
        }
    }

    private void fillCombobox_MauSacQuaiDeo() {
        ArrayList<MauQuaiDeo> arr_mauSac = new ArrayList<>();
        arr_mauSac.clear();
        arr_mauSac = mauQuaiDeoService.layThongTinMauQuaiDeo();
        cbx_mauVo.removeAllItems();
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        cbx_mauVo.setModel(model);
        cbx_mauVo.addItem("");
        for (MauQuaiDeo x : arr_mauSac) {
            cbx_mauVo.addItem(x.getTenQuaiDeo());

        }
    }

    private void fillCombobox_MauSacQuaiDeo_deLoc() {
        ArrayList<MauQuaiDeo> arr_mauSac = new ArrayList<>();
        arr_mauSac.clear();
        arr_mauSac = mauQuaiDeoService.layThongTinMauQuaiDeo();

        cbx_mauQuaiDeoLoc.removeAllItems();
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        cbx_mauQuaiDeoLoc.setModel(model);
        cbx_mauQuaiDeoLoc.addItem("");
        for (MauQuaiDeo x : arr_mauSac) {
            cbx_mauQuaiDeoLoc.addItem(x.getTenQuaiDeo());

        }
    }

    private void them1ChiTietDongHo() {
        String tenDH = txt_tenDongHo.getText().trim();
//        String maChiTietSP = txt_maCTDH.getText().trim();

        String tenGioiTinh = cbx_gioiTinh.getSelectedItem().toString();
        String tenKieuMay = cbx_kieuMay.getSelectedItem().toString();
        String tenLoaiDay = cbx_loaiDayDeo.getSelectedItem().toString();
        String tenMauVo = cbx_mauVo.getSelectedItem().toString();
        String giaNhap = txt_giaNhap.getText();
        String giaBan = txt_giaBan.getText();
        String tenCTKhuyenMai = cbx_chuongTrinhKM.getSelectedItem().toString();
        String tenStatusCTSP = cbx_trangThai.getSelectedItem().toString();

        // // tên đồng hồ, số lượng, giá nhập, giá bán
        if (tenDH.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Bạn cần chọn đồng hồ trước khi thêm mới chi tiết cho đồng hồ");
            txt_tenDongHo.requestFocus();
            return;
        }

        if (tenGioiTinh.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Bạn cần chọn giới tính cho đồng hồ");

            return;
        }

        if (tenKieuMay.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Bạn cần chọn loại kiểu máy cho đồng hồ");

            return;
        }

        if (tenLoaiDay.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Bạn cần chọn chất liệu dây cho đồng hồ");

            return;
        }

        if (tenCTKhuyenMai.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Bạn cần chọn chương trình khuyến mãi áp dụng cho đồng hồ, nếu có");

            return;
        }

        if (tenMauVo.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Bạn cần chọn màu quai đeo cho đồng hồ");

            return;
        }

        // số lượng 
        if (txt_soLuong.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Bạn cần nhập số lượng ");
            txt_soLuong.requestFocus();
            return;
        }

        int soLuong = 0;

        try {
            soLuong = Integer.parseInt(txt_soLuong.getText());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Số lượng phải là số");
            return;
        }

        if (soLuong < 0) {
            JOptionPane.showMessageDialog(this, "Nhập số lượng phải > 0");
            txt_soLuong.requestFocus();
            return;
        }

        // giá nhập
        if (txt_giaNhap.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Bạn cần nhập giá nhập");
            txt_giaNhap.requestFocus();
            return;
        }

        Double giaNhap_ = 0.0;

        try {
            giaNhap_ = Double.parseDouble(giaNhap);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Giá nhập phải là số");
            return;
        }
        if (giaNhap_ < 0 || giaNhap_ < 50000) {
            JOptionPane.showMessageDialog(this, "Nhập giá nhập phải > 50.000 vnđ");
            txt_giaNhap.requestFocus();
            return;
        }

        // giá bán 
        if (txt_giaBan.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Bạn cần nhập giá bán");
            txt_giaBan.requestFocus();
            return;
        }

        Double giaBan_ = 0.0;
        try {
            giaBan_ = Double.parseDouble(giaBan);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Giá bán phải là số");
            return;
        }

        if (giaBan_ < 0 || giaBan_ < 50000) {
            JOptionPane.showMessageDialog(this, "Nhập giá bán phải > 50.000 vnđ");
            txt_giaBan.requestFocus();
            return;
        } else if (giaBan_ < giaNhap_) {
            JOptionPane.showMessageDialog(this, "Giá bán phải lớn hơn giá nhập, mời bạn nhập lại ");
            txt_giaBan.requestFocus();
            return;
        }

        int idDH = this.getIDDongHo(tenDH);
//        int idDHChiTiet = Integer.parseInt(maChiTietSP);
        int idGioiTinh = this.getIDGioiTinh(tenGioiTinh);
        int idKieuMay = this.getIDKieuMay(tenKieuMay);
        int idLoaiDay = this.getIDLoaiDayDeo(tenLoaiDay);
        int idMauVo = this.getIDMauVo(tenMauVo);
        int idStatusSPCT = this.getIDTrangThaiSPCT(tenStatusCTSP);
        int idCTKM = this.getIDKhuyenMai(tenCTKhuyenMai);

        ChiTietDongHo chiTietDH = new ChiTietDongHo(idDH, idGioiTinh, idKieuMay, idLoaiDay,
                idMauVo, soLuong, giaNhap_, giaBan_, idCTKM, idStatusSPCT);

        chiTietDHService.themMoiDongHoCT(chiTietDH);
//        chiTietDHService.capNhatTrangThaiDongHo();

        clearForm();

    }

    public void clearForm() {
        txt_tenDongHo.setText("");
        txt_maCTDH.setText("");
        txt_giaNhap.setText("");
        txt_giaBan.setText("");
        txt_soLuong.setText("");
        txt_locTheoKhoangGia.setText("");
        cbx_gioiTinh.setSelectedIndex(0);
        cbx_kieuMay.setSelectedIndex(0);
        cbx_loaiDayDeo.setSelectedIndex(0);
        cbx_chuongTrinhKM.setSelectedIndex(0);
        cbx_mauVo.setSelectedIndex(0);
        cbx_trangThai.setSelectedIndex(0);

        cbx_tenDongHo_deLoc.setSelectedIndex(0);
        cbx_mauQuaiDeoLoc.setSelectedIndex(0);

    }

    public int getIDDongHo(String tenDH) {
        return dongHoService.layIDDongHoBangTenDH(tenDH);
    }

    public int getIDGioiTinh(String tenGioiTinh) {
        ds_gioiTinh.clear();
        ds_gioiTinh = gioiTinhService.layThongTinGT();
        for (GioiTinh x : ds_gioiTinh) {
            if (x.getTen().equalsIgnoreCase(tenGioiTinh)) {
                return x.getId();
            }
        }

        return -1;
    }

    public int getIDKieuMay(String tenKieuMay) {
        ds_kieuMay.clear();
        ds_kieuMay = kieuMayService.layThongTinKieuMay();
        for (KieuMay x : ds_kieuMay) {
            if (x.getTen().equalsIgnoreCase(tenKieuMay)) {
                return x.getId();
            }
        }

        return -1;
    }

    public int getIDLoaiDayDeo(String tenLoaiDay) {
        ds_chatLieuDay.clear();
        ds_chatLieuDay = chatLieuDayService.layThongTinCLD();
        for (ChatLieuDay x : ds_chatLieuDay) {
            if (x.getTen().equalsIgnoreCase(tenLoaiDay)) {
                return x.getId();
            }
        }

        return -1;
    }

    public int getIDMauVo(String tenMauVo) {
        ds_mauQuaiDeo.clear();
        ds_mauQuaiDeo = mauQuaiDeoService.layThongTinMauQuaiDeo();
        for (MauQuaiDeo x : ds_mauQuaiDeo) {
            if (x.getTenQuaiDeo().equalsIgnoreCase(tenMauVo)) {
                return x.getIdMauQuaiDeo();
            }
        }

        return -1;
    }

    public int getIDTrangThaiSPCT(String tenTT) {
        ds_chiTietStatusSP.clear();
        ds_chiTietStatusSP = trangThaiDHCTService.layThongTinGT();
        for (TrangThaiChiTietSanPham x : ds_chiTietStatusSP) {
            if (x.getTrangThai().equalsIgnoreCase(tenTT)) {
                return x.getId();
            }
        }

        return -1;
    }

    public int getIDKhuyenMai(String tenCTKM) {
        ds_khuyenMai.clear();
        ds_khuyenMai = khuyenMaiService.layThongTinKM();
        for (KhuyenMai x : ds_khuyenMai) {
            if (x.getTen().equalsIgnoreCase(tenCTKM)) {
                return x.getId();
            }
        }

        return -1;
    }

    private void fillCombobox_timTheoTenDongHo() {
        ds_dongHo = dongHoService.layThongTinDH();

        cbx_tenDongHo_deLoc.removeAllItems();
        cbx_tenDongHo_deLoc.addItem("");
        for (DongHo x : ds_dongHo) {
            cbx_tenDongHo_deLoc.addItem(x.getTen());
        }
    }

    private void fillCombobox_khoangGia() {
        String locGia[] = {"<", ">=", "<=", ">", "="};
        cbx_hinhThucLocKhoangGia.removeAllItems();
        cbx_hinhThucLocKhoangGia.addItem("");
        for (int i = 0; i < locGia.length; i++) {
            cbx_hinhThucLocKhoangGia.addItem(locGia[i]);
        }
    }

    private void fill_dataTo_tbl_showThongTinDHChiTiet() {
        String columns[] = {"Mã CTĐH", "Tên đồng hồ", "Tính năng", "Thời gian bảo hành", "Giới tính",
            "Kiểu máy", "Loại dây đeo", "Màu dây đeo", "Số lượng", "Giá bán",
            "Chương trình KM", "Giá sp sau KM", "Trạng thái"};
        DefaultTableModel tableModel = new DefaultTableModel(columns, 0);
        tableModel.setRowCount(0);

        ArrayList<DongHoChiTietViewModel> ds_dhChiTiet = new ArrayList<>();
        ds_dhChiTiet.clear();

        ds_dhChiTiet = chiTietDHService.layThongTinChiTietDongHoNhuTable();
        //{"Tên đồng hồ","Tính năng","Thời gian bảo hành","Giới tính", "Kiểu máy","Loại dây đeo"
        //,"Màu dây đeo","Số lượng","Giá bán","Chương trình KM","Giá sp sau KM"}

        for (DongHoChiTietViewModel x : ds_dhChiTiet) {
            Object object[] = new Object[]{x.getIdCTDH(), x.getTenDongHo(), x.getTinhNang(), x.getThoiGianBH() + " tháng", x.getLoaiGioiTinh(),
                x.getLoaiKieuMay(), x.getLoaiDayDeo(), x.getMauDayDeo(), x.getSoLuong(), x.getGiaBan(), x.getChuongTrinhKM(),
                x.getGiaSauKM(), x.getTrangThaiDHCT()};
            tableModel.addRow(object);
        }

        tbl_showThongTinDHChiTiet.setModel(tableModel);
    }

    private void clickShowDataBangDongHoChiTiet() {
        // dongHoChiTiet
        int rowSelected = tbl_showThongTinDHChiTiet.getSelectedRow();
        int idDHCT = Integer.parseInt(tbl_showThongTinDHChiTiet.getValueAt(rowSelected, 0).toString());

        ArrayList<ChiTietDongHo> dsDongHoChiTiet = new ArrayList<>();
        dsDongHoChiTiet = chiTietDHService.layTatCaThongTinChiTietDongHo();

        txt_tenDongHo.setText(tbl_showThongTinDHChiTiet.getValueAt(rowSelected, 1).toString());
        txt_maCTDH.setText(tbl_showThongTinDHChiTiet.getValueAt(rowSelected, 0).toString());
        txt_soLuong.setText(tbl_showThongTinDHChiTiet.getValueAt(rowSelected, 8).toString());
        txt_giaBan.setText(tbl_showThongTinDHChiTiet.getValueAt(rowSelected, 9).toString());

        for (ChiTietDongHo x : dsDongHoChiTiet) {
            if (x.getIdChiTietDH() == idDHCT) {
                txt_giaNhap.setText(String.valueOf(x.getGiaNhap()));
            }
        }

        cbx_gioiTinh.setSelectedItem(tbl_showThongTinDHChiTiet.getValueAt(rowSelected, 4).toString());
        cbx_kieuMay.setSelectedItem(tbl_showThongTinDHChiTiet.getValueAt(rowSelected, 5).toString());
        cbx_loaiDayDeo.setSelectedItem(tbl_showThongTinDHChiTiet.getValueAt(rowSelected, 6).toString());
        cbx_mauVo.setSelectedItem(tbl_showThongTinDHChiTiet.getValueAt(rowSelected, 7).toString());
        cbx_trangThai.setSelectedItem(tbl_showThongTinDHChiTiet.getValueAt(rowSelected, 12).toString());
        cbx_chuongTrinhKM.setSelectedItem(tbl_showThongTinDHChiTiet.getValueAt(rowSelected, 10).toString());

    }

    private void xoa1ChiTietDongHo() {
        int rowSelected = tbl_showThongTinDHChiTiet.getSelectedRow();

        if (rowSelected < 0 || txt_maCTDH.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Bạn cần nhập mã CTSP hoặc chọn trên bảng, để thực hiện XÓA");
            return;
        }

        int maCTSP = Integer.parseInt(txt_maCTDH.getText());

        chiTietDHService.xoaDongHoCT(maCTSP);

        clearForm();
    }

    private void suaDongHoChiTiet() {

        String maChiTietSP = txt_maCTDH.getText().trim();
        if (maChiTietSP.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Chọn 1 hàng trên bảng để thực hiện sửa chi tiết đồng hồ dễ dàng hơn");

            return;
        }

        int idDHChiTiet = Integer.parseInt(maChiTietSP);

        String tenDH = txt_tenDongHo.getText().trim();
//        String maChiTietSP = txt_maCTDH.getText().trim();

        String tenGioiTinh = cbx_gioiTinh.getSelectedItem().toString();
        String tenKieuMay = cbx_kieuMay.getSelectedItem().toString();
        String tenLoaiDay = cbx_loaiDayDeo.getSelectedItem().toString();
        String tenMauVo = cbx_mauVo.getSelectedItem().toString();
        String giaNhap = txt_giaNhap.getText();
        String giaBan = txt_giaBan.getText();
        String tenCTKhuyenMai = cbx_chuongTrinhKM.getSelectedItem().toString();
        String tenStatusCTSP = cbx_trangThai.getSelectedItem().toString();

        // // tên đồng hồ, số lượng, giá nhập, giá bán
        if (tenDH.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Bạn cần chọn đồng hồ trước khi thêm mới chi tiết cho đồng hồ");
            txt_tenDongHo.requestFocus();
            return;
        }

        if (tenGioiTinh.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Bạn cần chọn giới tính cho đồng hồ");

            return;
        }

        if (tenKieuMay.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Bạn cần chọn loại kiểu máy cho đồng hồ");

            return;
        }

        if (tenLoaiDay.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Bạn cần chọn chất liệu dây cho đồng hồ");

            return;
        }

        if (tenCTKhuyenMai.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Bạn cần chọn chương trình khuyến mãi áp dụng cho đồng hồ, nếu có");

            return;
        }

        if (tenMauVo.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Bạn cần chọn màu quai đeo cho đồng hồ");

            return;
        }

        // số lượng 
        if (txt_soLuong.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Bạn cần nhập số lượng ");
            txt_soLuong.requestFocus();
            return;
        }

        int soLuong = 0;

        try {
            soLuong = Integer.parseInt(txt_soLuong.getText());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Số lượng phải là số");
            return;
        }

        if (soLuong < 0) {
            JOptionPane.showMessageDialog(this, "Nhập số lượng phải > 0");
            txt_soLuong.requestFocus();
            return;
        }

        // giá nhập
        if (txt_giaNhap.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Bạn cần nhập giá nhập");
            txt_giaNhap.requestFocus();
            return;
        }

        Double giaNhap_ = 0.0;

        try {
            giaNhap_ = Double.parseDouble(giaNhap);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Giá nhập phải là số");
            return;
        }
        if (giaNhap_ < 0 || giaNhap_ < 50000) {
            JOptionPane.showMessageDialog(this, "Nhập giá nhập phải > 50.000 vnđ");
            txt_giaNhap.requestFocus();
            return;
        }

        // giá bán 
        if (txt_giaBan.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Bạn cần nhập giá bán");
            txt_giaBan.requestFocus();
            return;
        }

        Double giaBan_ = 0.0;
        try {
            giaBan_ = Double.parseDouble(giaBan);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Giá bán phải là số");
            return;
        }

        if (giaBan_ < 0 || giaBan_ < 50000) {
            JOptionPane.showMessageDialog(this, "Nhập giá bán phải > 50.000 vnđ");
            txt_giaBan.requestFocus();
            return;
        } else if (giaBan_ < giaNhap_) {
            JOptionPane.showMessageDialog(this, "Giá bán phải lớn hơn giá nhập, mời bạn nhập lại ");
            txt_giaBan.requestFocus();
            return;
        }

        int idDH = this.getIDDongHo(tenDH);
//        int idDHChiTiet = Integer.parseInt(maChiTietSP);
        int idGioiTinh = this.getIDGioiTinh(tenGioiTinh);
        int idKieuMay = this.getIDKieuMay(tenKieuMay);
        int idLoaiDay = this.getIDLoaiDayDeo(tenLoaiDay);
        int idMauVo = this.getIDMauVo(tenMauVo);
        int idStatusSPCT = this.getIDTrangThaiSPCT(tenStatusCTSP);
        int idCTKM = this.getIDKhuyenMai(tenCTKhuyenMai);

        ChiTietDongHo chiTietDH = new ChiTietDongHo(idDHChiTiet, idDH, idGioiTinh, idKieuMay, idLoaiDay,
                idMauVo, soLuong, giaNhap_, giaBan_, idCTKM, idStatusSPCT);

        chiTietDHService.suaThongTinDongHoCT(chiTietDH);
        chiTietDHService.capNhatTrangThaiDongHo(chiTietDH.getSoLuong());

        clearForm();
    }

    private void locDongHoChiTietTheoTenDongHo() {
//        String tenDHLoc = cbx_tenDongHo_deLoc.getSelectedItem().toString();
//        if (tenDHLoc.isEmpty()) {
//            JOptionPane.showMessageDialog(this, "Chọn tên đồng hồ bạn muốn tìm kiếm");
//            return;
//        }
//
//        String columns[] = {"Mã CTĐH", "Tên đồng hồ", "Tính năng", "Thời gian bảo hành", "Giới tính",
//            "Kiểu máy", "Loại dây đeo", "Màu dây đeo", "Số lượng", "Giá bán",
//            "Chương trình KM", "Giá sp sau KM", "Trạng thái"};
//        DefaultTableModel tableModel = new DefaultTableModel(columns, 0);
//        tableModel.setRowCount(0);
//
//        ArrayList<DongHoChiTietViewModel> ds_dhChiTiet = new ArrayList<>();
//        ds_dhChiTiet.clear();
//
//        String tenDH = cbx_tenDongHo_deLoc.getSelectedItem().toString();
//
//        ds_dhChiTiet = chiTietDHService.locTheoTenDongHo(tenDH);
//        //{"Tên đồng hồ","Tính năng","Thời gian bảo hành","Giới tính", "Kiểu máy","Loại dây đeo"
//        //,"Màu dây đeo","Số lượng","Giá bán","Chương trình KM","Giá sp sau KM"}
//
//        for (DongHoChiTietViewModel x : ds_dhChiTiet) {
//            Object object[] = new Object[]{x.getIdCTDH(), x.getTenDongHo(), x.getTinhNang(), x.getThoiGianBH() + " tháng", x.getLoaiGioiTinh(),
//                x.getLoaiKieuMay(), x.getLoaiDayDeo(), x.getMauDayDeo(), x.getSoLuong(), x.getGiaBan(), x.getChuongTrinhKM(),
//                x.getGiaSauKM(), x.getTrangThaiDHCT()};
//            tableModel.addRow(object);
//        }
//
//        tbl_showThongTinDHChiTiet.setModel(tableModel);
    }

    private void locTheoKhoangGia() {
        String giaMuonLoc = txt_locTheoKhoangGia.getText();
        if (giaMuonLoc.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Bạn cần nhập mức giá muốn tìm kiếm");
            txt_locTheoKhoangGia.requestFocus();
            return;
        }

        Double giaLoc = Double.parseDouble(giaMuonLoc);
//        System.out.println("Gia loc: " + giaLoc);
        String loaiLoc = this.getLoaiLocGia();
//        System.out.println("Loai loc: " + loaiLoc);

        String columns[] = {"Mã CTĐH", "Tên đồng hồ", "Tính năng", "Thời gian bảo hành", "Giới tính",
            "Kiểu máy", "Loại dây đeo", "Màu dây đeo", "Số lượng", "Giá bán",
            "Chương trình KM", "Giá sp sau KM", "Trạng thái"};
        DefaultTableModel tableModel = new DefaultTableModel(columns, 0);
        tableModel.setRowCount(0);

        ArrayList<DongHoChiTietViewModel> ds_dhChiTiet = new ArrayList<>();
        ds_dhChiTiet.clear();

        ds_dhChiTiet = chiTietDHService.locTheoKhoangGia(loaiLoc, giaLoc);
        //{"Tên đồng hồ","Tính năng","Thời gian bảo hành","Giới tính", "Kiểu máy","Loại dây đeo"
        //,"Màu dây đeo","Số lượng","Giá bán","Chương trình KM","Giá sp sau KM"}

        for (DongHoChiTietViewModel x : ds_dhChiTiet) {
            Object object[] = new Object[]{x.getIdCTDH(), x.getTenDongHo(), x.getTinhNang(), x.getThoiGianBH() + " tháng", x.getLoaiGioiTinh(),
                x.getLoaiKieuMay(), x.getLoaiDayDeo(), x.getMauDayDeo(), x.getSoLuong(), x.getGiaBan(), x.getChuongTrinhKM(),
                x.getGiaSauKM(), x.getTrangThaiDHCT()};
            tableModel.addRow(object);
        }

        tbl_showThongTinDHChiTiet.setModel(tableModel);
    }

    public String getLoaiLocGia() {
        String loaiLoc = cbx_hinhThucLocKhoangGia.getSelectedItem().toString();
        if (loaiLoc.equalsIgnoreCase("=")) {
            return "bang";
        } else if (loaiLoc.equalsIgnoreCase("<")) {
            return "nhoHon";
        } else if (loaiLoc.equalsIgnoreCase(">")) {
            return "lonHon";
        } else if (loaiLoc.equalsIgnoreCase(">=")) {
            return "lonHonBang";
        } else if (loaiLoc.equalsIgnoreCase("<=")) {
            return "nhoHonBang";
        }
        return "";
    }

    private void locTheoMauSac() {
        String mauSacLoc = cbx_mauQuaiDeoLoc.getSelectedItem().toString();

        if (mauSacLoc.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Chọn màu sắc bạn muốn tìm kiếm");
            return;
        }

        String columns[] = {"Mã CTĐH", "Tên đồng hồ", "Tính năng", "Thời gian bảo hành", "Giới tính",
            "Kiểu máy", "Loại dây đeo", "Màu dây đeo", "Số lượng", "Giá bán",
            "Chương trình KM", "Giá sp sau KM", "Trạng thái"};
        DefaultTableModel tableModel = new DefaultTableModel(columns, 0);
        tableModel.setRowCount(0);

        ArrayList<DongHoChiTietViewModel> ds_dhChiTiet = new ArrayList<>();
        ds_dhChiTiet.clear();

        ds_dhChiTiet = chiTietDHService.locTheoMauSac(mauSacLoc);
        //{"Tên đồng hồ","Tính năng","Thời gian bảo hành","Giới tính", "Kiểu máy","Loại dây đeo"
        //,"Màu dây đeo","Số lượng","Giá bán","Chương trình KM","Giá sp sau KM"}

        for (DongHoChiTietViewModel x : ds_dhChiTiet) {
            Object object[] = new Object[]{x.getIdCTDH(), x.getTenDongHo(), x.getTinhNang(), x.getThoiGianBH() + " tháng", x.getLoaiGioiTinh(),
                x.getLoaiKieuMay(), x.getLoaiDayDeo(), x.getMauDayDeo(), x.getSoLuong(), x.getGiaBan(), x.getChuongTrinhKM(),
                x.getGiaSauKM(), x.getTrangThaiDHCT()};
            tableModel.addRow(object);
        }

        tbl_showThongTinDHChiTiet.setModel(tableModel);
    }

    private void clickShowDataBangDongHo() {
        int rowSelectedDH = tbl_showThongTinDH.getSelectedRow();
        String tenDH = tbl_showThongTinDH.getValueAt(rowSelectedDH, 1).toString();
        txt_tenDongHo.setText(tenDH);
    }

    private void comboboxAfterClick() {
        if (cbx_tenDongHo_deLoc.getSelectedItem() == null) {
//            JOptionPane.showMessageDialog(this, "Chọn tên đồng hồ bạn muốn tìm kiếm");
            return;
        }
        String tenDHLoc = cbx_tenDongHo_deLoc.getSelectedItem().toString();
        

        String columns[] = {"Mã CTĐH", "Tên đồng hồ", "Tính năng", "Thời gian bảo hành", "Giới tính",
            "Kiểu máy", "Loại dây đeo", "Màu dây đeo", "Số lượng", "Giá bán",
            "Chương trình KM", "Giá sp sau KM", "Trạng thái"};
        DefaultTableModel tableModel = new DefaultTableModel(columns, 0);
        tableModel.setRowCount(0);
        if (cbx_tenDongHo_deLoc.getSelectedItem().toString().isEmpty()) {
//            JOptionPane.showMessageDialog(this, "Chọn tên đồng hồ bạn muốn tìm kiếm");
            
            tableModel.setRowCount(0);
            tbl_showThongTinDHChiTiet.setModel(tableModel);
            return;
        }

        ArrayList<DongHoChiTietViewModel> ds_dhChiTiet = new ArrayList<>();
        ds_dhChiTiet.clear();

        String tenDH = cbx_tenDongHo_deLoc.getSelectedItem().toString();

        ds_dhChiTiet = chiTietDHService.locTheoTenDongHo(tenDH);
        //{"Tên đồng hồ","Tính năng","Thời gian bảo hành","Giới tính", "Kiểu máy","Loại dây đeo"
        //,"Màu dây đeo","Số lượng","Giá bán","Chương trình KM","Giá sp sau KM"}

        for (DongHoChiTietViewModel x : ds_dhChiTiet) {
            Object object[] = new Object[]{x.getIdCTDH(), x.getTenDongHo(), x.getTinhNang(), x.getThoiGianBH() + " tháng", x.getLoaiGioiTinh(),
                x.getLoaiKieuMay(), x.getLoaiDayDeo(), x.getMauDayDeo(), x.getSoLuong(), x.getGiaBan(), x.getChuongTrinhKM(),
                x.getGiaSauKM(), x.getTrangThaiDHCT()};
            tableModel.addRow(object);
        }

        tbl_showThongTinDHChiTiet.setModel(tableModel);

    }

    private void clickCombobox_SearchData_mauQuaiDeo() {
        if(cbx_mauQuaiDeoLoc.getSelectedItem()==null){
            return;
        }
        
        String mauSacLoc = cbx_mauQuaiDeoLoc.getSelectedItem().toString();

        

        String columns[] = {"Mã CTĐH", "Tên đồng hồ", "Tính năng", "Thời gian bảo hành", "Giới tính",
            "Kiểu máy", "Loại dây đeo", "Màu dây đeo", "Số lượng", "Giá bán",
            "Chương trình KM", "Giá sp sau KM", "Trạng thái"};
        DefaultTableModel tableModel = new DefaultTableModel(columns, 0);
        tableModel.setRowCount(0);
        
        if (mauSacLoc.isEmpty()) {
//            JOptionPane.showMessageDialog(this, "Chọn màu sắc bạn muốn tìm kiếm");
            tableModel.setRowCount(0);
            tbl_showThongTinDHChiTiet.setModel(tableModel);
            return;
        }

        ArrayList<DongHoChiTietViewModel> ds_dhChiTiet = new ArrayList<>();
        ds_dhChiTiet.clear();

        ds_dhChiTiet = chiTietDHService.locTheoMauSac(mauSacLoc);
        //{"Tên đồng hồ","Tính năng","Thời gian bảo hành","Giới tính", "Kiểu máy","Loại dây đeo"
        //,"Màu dây đeo","Số lượng","Giá bán","Chương trình KM","Giá sp sau KM"}

        for (DongHoChiTietViewModel x : ds_dhChiTiet) {
            Object object[] = new Object[]{x.getIdCTDH(), x.getTenDongHo(), x.getTinhNang(), x.getThoiGianBH() + " tháng", x.getLoaiGioiTinh(),
                x.getLoaiKieuMay(), x.getLoaiDayDeo(), x.getMauDayDeo(), x.getSoLuong(), x.getGiaBan(), x.getChuongTrinhKM(),
                x.getGiaSauKM(), x.getTrangThaiDHCT()};
            tableModel.addRow(object);
        }

        tbl_showThongTinDHChiTiet.setModel(tableModel);
    }

    private void clickLoaiMucGia_searchData_mucGia() {
        String giaMuonLoc = txt_locTheoKhoangGia.getText();
        if (giaMuonLoc.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Bạn cần nhập mức giá muốn tìm kiếm");
            txt_locTheoKhoangGia.requestFocus();
            return;
        }

        Double giaLoc = Double.parseDouble(giaMuonLoc);
//        System.out.println("Gia loc: " + giaLoc);
        String loaiLoc = this.getLoaiLocGia();
//        System.out.println("Loai loc: " + loaiLoc);

        String columns[] = {"Mã CTĐH", "Tên đồng hồ", "Tính năng", "Thời gian bảo hành", "Giới tính",
            "Kiểu máy", "Loại dây đeo", "Màu dây đeo", "Số lượng", "Giá bán",
            "Chương trình KM", "Giá sp sau KM", "Trạng thái"};
        DefaultTableModel tableModel = new DefaultTableModel(columns, 0);
        tableModel.setRowCount(0);

        ArrayList<DongHoChiTietViewModel> ds_dhChiTiet = new ArrayList<>();
        ds_dhChiTiet.clear();

        ds_dhChiTiet = chiTietDHService.locTheoKhoangGia(loaiLoc, giaLoc);
        //{"Tên đồng hồ","Tính năng","Thời gian bảo hành","Giới tính", "Kiểu máy","Loại dây đeo"
        //,"Màu dây đeo","Số lượng","Giá bán","Chương trình KM","Giá sp sau KM"}

        for (DongHoChiTietViewModel x : ds_dhChiTiet) {
            Object object[] = new Object[]{x.getIdCTDH(), x.getTenDongHo(), x.getTinhNang(), x.getThoiGianBH() + " tháng", x.getLoaiGioiTinh(),
                x.getLoaiKieuMay(), x.getLoaiDayDeo(), x.getMauDayDeo(), x.getSoLuong(), x.getGiaBan(), x.getChuongTrinhKM(),
                x.getGiaSauKM(), x.getTrangThaiDHCT()};
            tableModel.addRow(object);
        }

        tbl_showThongTinDHChiTiet.setModel(tableModel);
    }
}
