/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package views;

import java.math.BigDecimal;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import models.ChiTietDongHo;
import models.DongHo;
import models.KhuyenMai;
import services.IDongHoChiTietService;
import services.ITrangThaiDongHoService;
import services.imp.ChiTietDongHoService;
import services.imp.ImpSV_TA.KhuyenmaiService;
import services.imp.TrangThaiDH_Service;
import services.ISV_TA.IKhuyenmaiService;
import viewmodel.DongHoChiTietViewModel;
import viewmodel.KhuyenmaiViewmodel;




/**
 *
 * @author ADMIN
 */
public class KhuyenMai_frm extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    DefaultTableModel defaultTableModel;
    DefaultTableModel defaultTableModel1;
    private IKhuyenmaiService khuyenmaiService = new KhuyenmaiService();
    ITrangThaiDongHoService trangThaiDHService = new TrangThaiDH_Service();
    private IDongHoChiTietService ctdhService = new ChiTietDongHoService();


    public KhuyenMai_frm() {
        initComponents();
        defaultTableModel = (DefaultTableModel) tb_khuyenmai.getModel();
        defaultTableModel1 = (DefaultTableModel) tb_sp.getModel();
        khuyenmaiService = new KhuyenmaiService();
//        DHChitietServices = new ChiTietDongHoService();
//        khuyenmaiService.UpdateTT();
//        khuyenmaiService.UpdateTT2();
        LoadData();
        LoadDataDH();

    }

    void LoadData() {
        defaultTableModel.setRowCount(0);
        int stt = 1;
        for (KhuyenMai x : khuyenmaiService.getlist()) {
            defaultTableModel.addRow(new Object[]{
                stt,
                x.getID(),
                x.getTenKM(),
                x.getNgayBatDau(),
                x.getNgayKetThuc(),
                x.getHinhThucKM(),
                String.format("%.0f", x.getGiaTriGiam()) + " " + x.getHinhThucKM(),
                x.getTrangthai() == 0 ? "Đã áp dụng" : "Ngưng áp dụng"
            });
            stt++;
        }
    }

  void LoadDataDH() {
        defaultTableModel1.setRowCount(0);
        for (DongHoChiTietViewModel x : ctdhService.layThongTinChiTietDongHoNhuTable()) {
            defaultTableModel1.addRow(new Object[]{
                false,
                x.getIdCTDH(),
                x.getTenDongHo()
            });
        }
    

}


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        panelBorder1 = new swing.PanelBorder();
        jLabel2 = new javax.swing.JLabel();
        txt_tenkm = new swing.MyTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        rd_VND = new javax.swing.JRadioButton();
        rd_phantram = new javax.swing.JRadioButton();
        date_BD = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();
        date_KT = new com.toedter.calendar.JDateChooser();
        txt_giatrgiam = new swing.MyTextField();
        jLabel8 = new javax.swing.JLabel();
        btn_them = new swing.MyButton();
        btn_sua = new swing.MyButton();
        btn_clear = new swing.MyButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tb_sp = new javax.swing.JTable();
        cb_selectAll = new javax.swing.JCheckBox();
        btn_them1 = new swing.MyButton();
        btn_xoa = new swing.MyButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tb_khuyenmai = new javax.swing.JTable();
        panelBorder2 = new swing.PanelBorder();
        src_timkiem = new swing.SearchText();
        lbl_timkiem = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        dateTK_KT = new com.toedter.calendar.JDateChooser();
        dateTK_BD = new com.toedter.calendar.JDateChooser();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panelBorder1.setBackground(new java.awt.Color(102, 204, 255));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setText("Ngày bắt đầu");
        panelBorder1.add(jLabel2);
        jLabel2.setBounds(390, 0, 260, 20);
        panelBorder1.add(txt_tenkm);
        txt_tenkm.setBounds(60, 20, 260, 40);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setText("Tên khuyễn mãi");
        panelBorder1.add(jLabel3);
        jLabel3.setBounds(60, 0, 260, 20);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Hình thức giảm giá");
        panelBorder1.add(jLabel4);
        jLabel4.setBounds(390, 130, 130, 30);

        rd_VND.setBackground(new java.awt.Color(102, 204, 255));
        buttonGroup1.add(rd_VND);
        rd_VND.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        rd_VND.setText("VND");
        panelBorder1.add(rd_VND);
        rd_VND.setBounds(530, 130, 50, 30);

        rd_phantram.setBackground(new java.awt.Color(102, 204, 255));
        buttonGroup1.add(rd_phantram);
        rd_phantram.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rd_phantram.setText("%");
        panelBorder1.add(rd_phantram);
        rd_phantram.setBounds(600, 130, 50, 30);

        date_BD.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 204, 204), 2));
        date_BD.setDateFormatString("dd/MM/yyyy");
        panelBorder1.add(date_BD);
        date_BD.setBounds(390, 20, 260, 40);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setText("Ngày kết thúc");
        panelBorder1.add(jLabel6);
        jLabel6.setBounds(60, 60, 260, 20);

        date_KT.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 204, 204), 2));
        date_KT.setDateFormatString("dd/MM/yyyy");
        panelBorder1.add(date_KT);
        date_KT.setBounds(60, 80, 260, 40);
        panelBorder1.add(txt_giatrgiam);
        txt_giatrgiam.setBounds(390, 80, 260, 40);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setText("Giá trị giảm");
        panelBorder1.add(jLabel8);
        jLabel8.setBounds(390, 60, 260, 20);

        btn_them.setBackground(new java.awt.Color(102, 204, 255));
        btn_them.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/add.png"))); // NOI18N
        btn_them.setText("Thêm");
        btn_them.setColor(new java.awt.Color(102, 204, 255));
        btn_them.setColorOver(new java.awt.Color(51, 204, 255));
        btn_them.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btn_them.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_themActionPerformed(evt);
            }
        });
        panelBorder1.add(btn_them);
        btn_them.setBounds(750, 30, 130, 40);

        btn_sua.setBackground(new java.awt.Color(102, 204, 255));
        btn_sua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/floppy-disk.png"))); // NOI18N
        btn_sua.setText("Cập nhật");
        btn_sua.setColor(new java.awt.Color(102, 204, 255));
        btn_sua.setColorOver(new java.awt.Color(102, 204, 255));
        btn_sua.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btn_sua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_suaActionPerformed(evt);
            }
        });
        panelBorder1.add(btn_sua);
        btn_sua.setBounds(750, 100, 130, 40);

        btn_clear.setBackground(new java.awt.Color(102, 204, 255));
        btn_clear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/refresh.png"))); // NOI18N
        btn_clear.setText("Làm mới");
        btn_clear.setColor(new java.awt.Color(102, 204, 255));
        btn_clear.setColorOver(new java.awt.Color(102, 204, 255));
        btn_clear.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btn_clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_clearActionPerformed(evt);
            }
        });
        panelBorder1.add(btn_clear);
        btn_clear.setBounds(750, 170, 130, 40);

        tb_sp.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Select", "Mã Đồng hồ", "Tên Đồng hồ"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tb_sp);

        panelBorder1.add(jScrollPane2);
        jScrollPane2.setBounds(20, 160, 580, 130);

        cb_selectAll.setBackground(new java.awt.Color(102, 204, 255));
        cb_selectAll.setText("Select All");
        cb_selectAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_selectAllActionPerformed(evt);
            }
        });
        panelBorder1.add(cb_selectAll);
        cb_selectAll.setBounds(20, 130, 71, 20);

        btn_them1.setBackground(new java.awt.Color(102, 204, 255));
        btn_them1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/add.png"))); // NOI18N
        btn_them1.setText("Thêm");
        btn_them1.setColor(new java.awt.Color(102, 204, 255));
        btn_them1.setColorOver(new java.awt.Color(51, 204, 255));
        btn_them1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btn_them1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_them1ActionPerformed(evt);
            }
        });
        panelBorder1.add(btn_them1);
        btn_them1.setBounds(750, 30, 130, 40);

        btn_xoa.setBackground(new java.awt.Color(102, 204, 255));
        btn_xoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/trash.png"))); // NOI18N
        btn_xoa.setText("Xoá");
        btn_xoa.setColor(new java.awt.Color(102, 204, 255));
        btn_xoa.setColorOver(new java.awt.Color(102, 204, 255));
        btn_xoa.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btn_xoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_xoaActionPerformed(evt);
            }
        });
        panelBorder1.add(btn_xoa);
        btn_xoa.setBounds(750, 240, 130, 40);

        tb_khuyenmai.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tb_khuyenmai.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Id", "Tên khuyến mãi", "Ngày bắt đầu", "Ngày kết thúc", "Hình thức giảm", "Giá trị giảm", "Trạng thái"
            }
        ));
        tb_khuyenmai.setRowHeight(25);
        tb_khuyenmai.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tb_khuyenmaiMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tb_khuyenmai);

        panelBorder2.setBackground(new java.awt.Color(255, 255, 255));

        src_timkiem.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                src_timkiemCaretUpdate(evt);
            }
        });
        panelBorder2.add(src_timkiem);
        src_timkiem.setBounds(10, 0, 240, 40);

        lbl_timkiem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/search_24px.png"))); // NOI18N
        lbl_timkiem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbl_timkiemMouseClicked(evt);
            }
        });
        panelBorder2.add(lbl_timkiem);
        lbl_timkiem.setBounds(250, 0, 40, 40);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("Ngày kết thúc");

        dateTK_KT.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 204, 204), 2));
        dateTK_KT.setDateFormatString("dd/MM/yyyy");

        dateTK_BD.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 204, 204), 2));
        dateTK_BD.setDateFormatString("dd/MM/yyyy");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Ngày bắt đầu");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1014, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(panelBorder1, javax.swing.GroupLayout.PREFERRED_SIZE, 990, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(40, 40, 40)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(dateTK_BD, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(60, 60, 60)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(dateTK_KT, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(30, 30, 30)
                            .addComponent(panelBorder2, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 990, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 630, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(panelBorder1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(0, 0, 0)
                            .addComponent(dateTK_BD, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(0, 0, 0)
                            .addComponent(dateTK_KT, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(10, 10, 10)
                            .addComponent(panelBorder2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGap(10, 10, 10)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_themActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_themActionPerformed
        // TODO add your handling code here:
        Pattern p = Pattern.compile("^[0-9]+$");
        try {
            if (txt_tenkm.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Bạn chưa nhập tên khuyến mãi");
                return;
            }
        } catch (NullPointerException e) {
            e.printStackTrace();
        }
        try {
            if (date_BD.getDate() == null) {
                JOptionPane.showMessageDialog(this, "Bạn chưa chọn ngày bắt đầu");
                return;
            }
        } catch (Exception e) {
        }
        try {
            if (date_KT.getDate() == null) {
                JOptionPane.showMessageDialog(this, "Bạn chưa chọn ngày kết thúc");
                return;
            }
        } catch (Exception e) {
        }
        try {
            if (!rd_VND.isSelected() && !rd_phantram.isSelected()) {
                JOptionPane.showMessageDialog(this, "Bạn chưa chọn hình thức giảm giá");
                return;
            }
        } catch (Exception e) {
        }

        try {
            if (txt_giatrgiam.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Bạn chưa nhập giá trị giảm");
                return;
            }
        } catch (Exception e) {
        }

        try {
            Integer.valueOf(txt_giatrgiam.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Giá trị giảm phải là số!");
            return;
        }

        try {
            if (date_KT.getDate().before(date_BD.getDate())) {
                JOptionPane.showMessageDialog(this, "Ngày kết thúc phải lớn hơn ngày bắt đầu");
                return;
            }
        } catch (Exception e) {
        }
        if (p.matcher(txt_tenkm.getText()).find() == true) {
            JOptionPane.showMessageDialog(this, "Tên không được nhập số");
            return;
        }
        if (txt_tenkm.getText().length() > 50) {
            JOptionPane.showMessageDialog(this, "Tên không được quá 50 kí tự");
            return;
        }
        if (khuyenmaiService.checktrung(txt_tenkm.getText()) != null) {
            JOptionPane.showMessageDialog(this, "Tên khuyến mãi đã tồn tại");
            return;
        }

        long time = System.currentTimeMillis();
        java.sql.Date date = new java.sql.Date(time);

        if (JOptionPane.showConfirmDialog(this, "Bạn có muốn thêm không?", "Add", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            KhuyenMai km = new KhuyenMai();
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            String date1 = sdf.format(date_BD.getDate());
            String date2 = sdf.format(date_KT.getDate());
            km.setNgayBatDau(date1);
            km.setNgayKetThuc(date2);
            km.setTenKM(txt_tenkm.getText());
            if (rd_VND.isSelected()) {
                km.setHinhThucKM("VND");
            } else if (rd_phantram.isSelected()) {
                km.setHinhThucKM("%");
            }
            km.setGiaTriGiam(Double.parseDouble(txt_giatrgiam.getText()));

//                 for(KhuyenMai x : lst){
//            Object objects[] = new Object[]{x.getID(), x.getNgayBatDau(), x.getNgayKetThuc(),x.getTenKM(),x.getTrangthai(),x.getGiaTriGiam()};
//            defaultTableModel.addRow(objects);
//                 }
            khuyenmaiService.Add(km);

            LoadData();

        }
    }//GEN-LAST:event_btn_themActionPerformed

    private void btn_suaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_suaActionPerformed
        // TODO add your handling code here:
        int r = tb_khuyenmai.getSelectedRow();
        int idKhuyenmai = Integer.parseInt(tb_khuyenmai.getValueAt(r, 1).toString());

        if (r < 0) {
            JOptionPane.showMessageDialog(this, "Bạn chưa chọn dòng nào");
            return;
        }
        if (JOptionPane.showConfirmDialog(this, "Bạn có muốn sửa không?", "Update", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            KhuyenMai km = new KhuyenMai();
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            String date1 = sdf.format(date_BD.getDate());
            String date2 = sdf.format(date_KT.getDate());
            km.setNgayBatDau(date1);
            km.setNgayKetThuc(date2);
            km.setTenKM(txt_tenkm.getText());
            if (rd_VND.isSelected()) {
                km.setHinhThucKM("VND");
            } else if (rd_phantram.isSelected()) {
                km.setHinhThucKM("%");
            }
            km.setGiaTriGiam(Double.parseDouble(txt_giatrgiam.getText()));
            if (date_KT.getDate().before(date_BD.getDate())) {
                JOptionPane.showMessageDialog(this, "Ngày kết thúc phải lớn hơn ngày bắt đầu");
                return;
            }
            long time = System.currentTimeMillis();
            java.sql.Date date = new java.sql.Date(time);
//            khuyenmaiService.Update(km, lst.get(r).getID());
//            khuyenmaiService.UpdateTT2();

            khuyenmaiService.Update(km, idKhuyenmai);
            LoadData();
        }
    }//GEN-LAST:event_btn_suaActionPerformed

    private void btn_clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_clearActionPerformed
        //         TODO add your handling code here:
        txt_tenkm.setText("");
        txt_giatrgiam.setText("");
        date_BD.setCalendar(null);
        date_KT.setCalendar(null);
        dateTK_BD.setCalendar(null);
        dateTK_KT.setCalendar(null);
        buttonGroup1.clearSelection();
        src_timkiem.setText("");
//        khuyenmaiService.UpdateTT();
//        khuyenmaiService.UpdateTT2();
        LoadData();
    }//GEN-LAST:event_btn_clearActionPerformed

    private void cb_selectAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_selectAllActionPerformed
        // TODO add your handling code here:
        for (int i = 0; i < tb_sp.getRowCount(); i++) {
            if (cb_selectAll.isSelected() == true) {
                tb_sp.setValueAt(true, i, 0);
            } else {
                tb_sp.setValueAt(false, i, 0);
            }
        }
    }//GEN-LAST:event_cb_selectAllActionPerformed

    private void tb_khuyenmaiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tb_khuyenmaiMouseClicked
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            int r = tb_khuyenmai.getSelectedRow();
            txt_tenkm.setText((String) tb_khuyenmai.getValueAt(r, 2).toString());
            //            txt_giatrgiam.setText((String) tb_khuyenmai.getValueAt(r, 4));
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            Date date1 = sdf.parse((String) tb_khuyenmai.getValueAt(r, 3));
            Date date2 = sdf.parse((String) tb_khuyenmai.getValueAt(r, 4));
            date_BD.setDate(date1);
            date_KT.setDate(date2);
            String hinhthuc = tb_khuyenmai.getValueAt(r, 5).toString();
            String giatri = tb_khuyenmai.getValueAt(r, 6).toString();
            txt_giatrgiam.setText(giatri);
            if (hinhthuc.contains("%")) {
                rd_phantram.setSelected(true);
            } else if (hinhthuc.contains("VND")) {
                rd_VND.setSelected(true);
            }
            if (giatri.contains("%")) {
                int index = giatri.indexOf("%");
                txt_giatrgiam.setText(giatri.substring(0, index));
            } else if (giatri.contains("VND")) {
                int index = giatri.indexOf("VND");
                txt_giatrgiam.setText(giatri.substring(0, index));
            }
        } catch (ParseException ex) {
            //            Logger.getLogger(FrmKhuyenmai.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_tb_khuyenmaiMouseClicked

    private void src_timkiemCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_src_timkiemCaretUpdate
        //        // TODO add your handling code here:
//        defaultTableModel.setRowCount(0);
//        int stt = 1;
//        for (KhuyenmaiViewmodel x : khuyenmaiService.GetOnebyten("%" + src_timkiem.getText() + "%")) {
//            defaultTableModel.addRow(new Object[]{
//                stt,
//                x.getTenKM(),
//                x.getNgayBatDau(),
//                x.getNgayKetThuc(),
//                String.format("%.0f", x.getGiaTriGiam()) + " " + x.getHinhThucKM(),
//                x.getTrangthai() == 0 ? "Đã áp dụng" : "Ngưng áp dụng"
//            });
//            stt++;
//        }
    }//GEN-LAST:event_src_timkiemCaretUpdate

    private void lbl_timkiemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbl_timkiemMouseClicked
        // TODO add your handling code here:
        if (dateTK_BD.getDate() == null && dateTK_KT.getDate() == null && src_timkiem.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Bạn chưa chọn ngày bắt đầu hoặc ngày kết thúc hoặc tên khuyến mãi để tìm kiếm");
            return;
        }
        if (dateTK_BD.getDate() != null && dateTK_KT.getDate() == null) {
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            String date3 = sdf.format(dateTK_BD.getDate());
            if (khuyenmaiService.GetOnebyBD(date3).isEmpty()) {
                JOptionPane.showMessageDialog(this, "Không có khuyến mãi nào");
                return;
            }
            defaultTableModel.setRowCount(0);
            int stt = 1;
            for (KhuyenmaiViewmodel x : khuyenmaiService.GetOnebyBD(date3)) {
                defaultTableModel.addRow(new Object[]{
                    stt,
                    x.getTenKM(),
                    x.getNgayBatDau(),
                    x.getNgayKetThuc(),
                    String.format("%.0f", x.getGiaTriGiam()) + " " + x.getHinhThucKM(),
                    x.getTrangthai() == 0 ? "Đã áp dụng" : "Ngưng áp dụng"
                });
                stt++;
            }
            return;
        }
        if (dateTK_BD.getDate() == null && dateTK_KT.getDate() != null) {
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            String date4 = sdf.format(dateTK_KT.getDate());
            if (khuyenmaiService.GetOnebyKT(date4).isEmpty()) {
                JOptionPane.showMessageDialog(this, "Không có khuyến mãi nào");
                return;
            }
            defaultTableModel.setRowCount(0);
            int stt = 1;
            for (KhuyenmaiViewmodel x : khuyenmaiService.GetOnebyKT(date4)) {
                defaultTableModel.addRow(new Object[]{
                    stt,
                    x.getTenKM(),
                    x.getNgayBatDau(),
                    x.getNgayKetThuc(),
                    String.format("%.0f", x.getGiaTriGiam()) + " " + x.getHinhThucKM(),
                    x.getTrangthai() == 0 ? "Đã áp dụng" : "Ngưng áp dụng"
                });
                stt++;
            }
            return;
        }
        if (dateTK_BD.getDate() != null && dateTK_KT.getDate() != null) {
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            String date3 = sdf.format(dateTK_BD.getDate());
            String date4 = sdf.format(dateTK_KT.getDate());
            if (khuyenmaiService.GetOnebyALL(date3, date4).isEmpty()) {
                JOptionPane.showMessageDialog(this, "Không có khuyến mãi nào");
                return;
            }
            defaultTableModel.setRowCount(0);
            int stt = 1;
            for (KhuyenmaiViewmodel x : khuyenmaiService.GetOnebyALL(date3, date4)) {
                defaultTableModel.addRow(new Object[]{
                    stt,
                    x.getTenKM(),
                    x.getNgayBatDau(),
                    x.getNgayKetThuc(),
                    String.format("%.0f", x.getGiaTriGiam()) + " " + x.getHinhThucKM(),
                    x.getTrangthai() == 0 ? "Đã áp dụng" : "Ngưng áp dụng"
                });
                stt++;
            }
            return;
        }
    }//GEN-LAST:event_lbl_timkiemMouseClicked

    private void btn_them1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_them1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_them1ActionPerformed

    private void btn_xoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_xoaActionPerformed

        int r = tb_khuyenmai.getSelectedRow();
        int id = Integer.parseInt(tb_khuyenmai.getValueAt(r, 1).toString());

//        if () {
//            JOptionPane.showMessageDialog(this, "Xóa thành công");
//        } else {
//            JOptionPane.showMessageDialog(this, "Xóa thất bại");
//        }
//          
        khuyenmaiService.Delete(id);
        LoadData();

    }//GEN-LAST:event_btn_xoaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(KhuyenMai_frm.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(KhuyenMai_frm.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(KhuyenMai_frm.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(KhuyenMai_frm.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new KhuyenMai_frm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private swing.MyButton btn_clear;
    private swing.MyButton btn_sua;
    private swing.MyButton btn_them;
    private swing.MyButton btn_them1;
    private swing.MyButton btn_xoa;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JCheckBox cb_selectAll;
    private com.toedter.calendar.JDateChooser dateTK_BD;
    private com.toedter.calendar.JDateChooser dateTK_KT;
    private com.toedter.calendar.JDateChooser date_BD;
    private com.toedter.calendar.JDateChooser date_KT;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbl_timkiem;
    private swing.PanelBorder panelBorder1;
    private swing.PanelBorder panelBorder2;
    private javax.swing.JRadioButton rd_VND;
    private javax.swing.JRadioButton rd_phantram;
    private swing.SearchText src_timkiem;
    private javax.swing.JTable tb_khuyenmai;
    private javax.swing.JTable tb_sp;
    private swing.MyTextField txt_giatrgiam;
    private swing.MyTextField txt_tenkm;
    // End of variables declaration//GEN-END:variables
}
